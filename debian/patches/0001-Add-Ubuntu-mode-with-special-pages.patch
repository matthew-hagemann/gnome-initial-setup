From: Robert Ancell <robert.ancell@canonical.com>
Date: Tue, 20 Mar 2018 11:51:30 +1300
Subject: Add Ubuntu mode with special pages

---
 data/its/polkit.its                                |   8 +
 data/its/polkit.loc                                |   6 +
 gnome-initial-setup/gis-assistant.c                |   9 +-
 gnome-initial-setup/gis-driver.c                   |  30 +
 gnome-initial-setup/gis-driver.h                   |   6 +
 gnome-initial-setup/gis-page.c                     |  15 +
 gnome-initial-setup/gis-page.h                     |   2 +
 gnome-initial-setup/gnome-initial-setup.c          |  40 +-
 gnome-initial-setup/meson.build                    |   3 +
 gnome-initial-setup/pages/apps/app-center.svg      |   3 +
 gnome-initial-setup/pages/apps/apps.gresource.xml  |   9 +
 .../pages/apps/default-snap-icon.svg               |   1 +
 gnome-initial-setup/pages/apps/gis-apps-page.c     | 679 +++++++++++++++++
 gnome-initial-setup/pages/apps/gis-apps-page.h     |  33 +
 gnome-initial-setup/pages/apps/gis-apps-page.ui    | 119 +++
 gnome-initial-setup/pages/apps/meson.build         |  10 +
 gnome-initial-setup/pages/meson.build              |   3 +
 .../pages/privacy/gis-privacy-page.c               |   2 +-
 .../pages/summary/gis-summary-page.c               |   2 +-
 gnome-initial-setup/pages/ubuntu-pro/checkmark.svg |   1 +
 gnome-initial-setup/pages/ubuntu-pro/fail.svg      |   1 +
 .../pages/ubuntu-pro/gis-ubuntupro-attach-page.ui  | 210 ++++++
 .../pages/ubuntu-pro/gis-ubuntupro-offer-page.ui   | 158 ++++
 .../pages/ubuntu-pro/gis-ubuntupro-page.c          | 820 +++++++++++++++++++++
 .../pages/ubuntu-pro/gis-ubuntupro-page.h          | 110 +++
 .../pages/ubuntu-pro/gis-ubuntupro-page.ui         |  34 +
 .../ubuntu-pro/gis-ubuntupro-services-page.ui      | 137 ++++
 gnome-initial-setup/pages/ubuntu-pro/meson.build   |  12 +
 .../pages/ubuntu-pro/ubuntu-pro-dark.svg           |  25 +
 .../pages/ubuntu-pro/ubuntu-pro.svg                |   1 +
 .../pages/ubuntu-pro/ubuntupro.gresource.xml       |  14 +
 gnome-initial-setup/pages/ubuntu-pro/utils.c       | 119 +++
 gnome-initial-setup/pages/ubuntu-pro/utils.h       |   7 +
 .../pages/ubuntu-report/gis-ubuntu-report-page.c   | 456 ++++++++++++
 .../pages/ubuntu-report/gis-ubuntu-report-page.h   |  33 +
 .../pages/ubuntu-report/gis-ubuntu-report-page.ui  | 104 +++
 .../pages/ubuntu-report/meson.build                |  10 +
 .../ubuntu-report/ubuntu-report.gresource.xml      |   8 +
 .../pages/ubuntu-report/ubuntu-report.svg          |   1 +
 po/POTFILES.in                                     |   5 +
 40 files changed, 3241 insertions(+), 5 deletions(-)
 create mode 100644 data/its/polkit.its
 create mode 100644 data/its/polkit.loc
 create mode 100644 gnome-initial-setup/pages/apps/app-center.svg
 create mode 100644 gnome-initial-setup/pages/apps/apps.gresource.xml
 create mode 100644 gnome-initial-setup/pages/apps/default-snap-icon.svg
 create mode 100644 gnome-initial-setup/pages/apps/gis-apps-page.c
 create mode 100644 gnome-initial-setup/pages/apps/gis-apps-page.h
 create mode 100644 gnome-initial-setup/pages/apps/gis-apps-page.ui
 create mode 100644 gnome-initial-setup/pages/apps/meson.build
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/checkmark.svg
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/fail.svg
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-attach-page.ui
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-offer-page.ui
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-page.c
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-page.h
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-page.ui
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-services-page.ui
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/meson.build
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/ubuntu-pro-dark.svg
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/ubuntu-pro.svg
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/ubuntupro.gresource.xml
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/utils.c
 create mode 100644 gnome-initial-setup/pages/ubuntu-pro/utils.h
 create mode 100644 gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.c
 create mode 100644 gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.h
 create mode 100644 gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.ui
 create mode 100644 gnome-initial-setup/pages/ubuntu-report/meson.build
 create mode 100644 gnome-initial-setup/pages/ubuntu-report/ubuntu-report.gresource.xml
 create mode 100644 gnome-initial-setup/pages/ubuntu-report/ubuntu-report.svg

diff --git a/data/its/polkit.its b/data/its/polkit.its
new file mode 100644
index 0000000..c48ad3f
--- /dev/null
+++ b/data/its/polkit.its
@@ -0,0 +1,8 @@
+<?xml version="1.0"?>
+<its:rules xmlns:its="http://www.w3.org/2005/11/its"
+           version="2.0">
+  <its:translateRule selector="//*" translate="no"/>
+  <its:translateRule selector="//action/description |
+                               //action/message"
+                     translate="yes"/>
+</its:rules>
\ No newline at end of file
diff --git a/data/its/polkit.loc b/data/its/polkit.loc
new file mode 100644
index 0000000..12c7bf0
--- /dev/null
+++ b/data/its/polkit.loc
@@ -0,0 +1,6 @@
+<?xml version="1.0"?>
+<locatingRules>
+  <locatingRule name="polkit policy" pattern="*.policy">
+    <documentRule localName="policyconfig" target="polkit.its"/>
+  </locatingRule>
+</locatingRules>
\ No newline at end of file
diff --git a/gnome-initial-setup/gis-assistant.c b/gnome-initial-setup/gis-assistant.c
index 40c5f04..ab2a44b 100644
--- a/gnome-initial-setup/gis-assistant.c
+++ b/gnome-initial-setup/gis-assistant.c
@@ -163,7 +163,8 @@ void
 gis_assistant_previous_page (GisAssistant *assistant)
 {
   g_return_if_fail (assistant->current_page != NULL);
-  switch_to (assistant, find_prev_page (assistant, assistant->current_page));
+  if (!gis_page_go_back(assistant->current_page))
+    switch_to (assistant, find_prev_page (assistant, assistant->current_page));
 }
 
 static void
@@ -246,6 +247,12 @@ update_applying_state (GisAssistant *assistant)
     {
       applying = gis_page_get_applying (assistant->current_page);
       is_first_page = assistant->pages->data == assistant->current_page;
+      /* Hack to prevent the next button from Ubuntu Pro attach page from
+       * being sensitive when the page is first mapped. */
+      if (g_str_equal(
+          GIS_PAGE_GET_CLASS(assistant->current_page)->page_id, "UbuntuPro"
+      ))
+        return;
     }
   gtk_widget_set_sensitive (assistant->forward, !applying);
   gtk_widget_set_sensitive (assistant->done, !applying);
diff --git a/gnome-initial-setup/gis-driver.c b/gnome-initial-setup/gis-driver.c
index d172276..7e40f9d 100644
--- a/gnome-initial-setup/gis-driver.c
+++ b/gnome-initial-setup/gis-driver.c
@@ -105,6 +105,9 @@ struct _GisDriver {
 
   const gchar *vendor_conf_file_path;
   GKeyFile *vendor_conf_file;
+
+  guint inhibit_count;
+  gboolean quit_requested;
 };
 
 G_DEFINE_TYPE (GisDriver, gis_driver, ADW_TYPE_APPLICATION)
@@ -1030,6 +1033,33 @@ gis_driver_save_data (GisDriver  *driver,
   return gis_assistant_save_data (driver->assistant, error);
 }
 
+void
+gis_driver_inhibit_quit (GisDriver *driver)
+{
+  driver->inhibit_count++;
+}
+
+void
+gis_driver_uninhibit_quit (GisDriver *driver)
+{
+  driver->inhibit_count--;
+  if (!driver->inhibit_count && driver->quit_requested)
+    gis_driver_quit (driver);
+}
+
+void gis_driver_quit (GisDriver *driver)
+{
+  if (driver->inhibit_count == 0)
+    {
+      g_application_quit (G_APPLICATION (driver));
+    }
+  else
+    {
+      driver->quit_requested = TRUE;
+      gtk_widget_hide (GTK_WIDGET (driver->main_window));
+    }
+  }
+
 GisDriver *
 gis_driver_new (GisDriverMode mode)
 {
diff --git a/gnome-initial-setup/gis-driver.h b/gnome-initial-setup/gis-driver.h
index ca06391..19f5a28 100644
--- a/gnome-initial-setup/gis-driver.h
+++ b/gnome-initial-setup/gis-driver.h
@@ -125,6 +125,12 @@ gchar *gis_driver_conf_get_string (GisDriver *driver,
                                    const gchar *group,
                                    const gchar *key);
 
+void gis_driver_inhibit_quit (GisDriver *driver);
+
+void gis_driver_uninhibit_quit (GisDriver *driver);
+
+void gis_driver_quit (GisDriver *driver);
+
 GisDriver *gis_driver_new (GisDriverMode mode);
 
 G_END_DECLS
diff --git a/gnome-initial-setup/gis-page.c b/gnome-initial-setup/gis-page.c
index d8e2242..125b6aa 100644
--- a/gnome-initial-setup/gis-page.c
+++ b/gnome-initial-setup/gis-page.c
@@ -202,6 +202,12 @@ gis_page_real_apply (GisPage      *page,
   return FALSE;
 }
 
+static gboolean
+gis_page_real_go_back (GisPage      *page)
+{
+  return FALSE;
+}
+
 static void
 gis_page_class_init (GisPageClass *klass)
 {
@@ -214,6 +220,7 @@ gis_page_class_init (GisPageClass *klass)
   object_class->set_property = gis_page_set_property;
 
   klass->apply = gis_page_real_apply;
+  klass->go_back = gis_page_real_go_back;
 
   obj_props[PROP_DRIVER] =
     g_param_spec_object ("driver", "", "", GIS_TYPE_DRIVER,
@@ -382,6 +389,14 @@ gis_page_apply_begin (GisPage                *page,
   g_object_notify_by_pspec (G_OBJECT (page), obj_props[PROP_APPLYING]);
 }
 
+gboolean
+gis_page_go_back (GisPage *page)
+{
+  GisPageClass *klass;
+  klass = GIS_PAGE_GET_CLASS (page);
+  return klass->go_back(page);
+}
+
 void
 gis_page_apply_complete (GisPage *page,
                          gboolean valid)
diff --git a/gnome-initial-setup/gis-page.h b/gnome-initial-setup/gis-page.h
index 742cc71..adb11e0 100644
--- a/gnome-initial-setup/gis-page.h
+++ b/gnome-initial-setup/gis-page.h
@@ -59,6 +59,7 @@ struct _GisPageClass
   void         (*locale_changed) (GisPage *page);
   gboolean     (*apply) (GisPage *page,
                          GCancellable *cancellable);
+  gboolean     (*go_back) (GisPage *page);
   gboolean     (*save_data) (GisPage  *page,
                              GError  **error);
   void         (*shown) (GisPage *page);
@@ -83,6 +84,7 @@ void         gis_page_locale_changed (GisPage *page);
 void         gis_page_apply_begin (GisPage *page, GisPageApplyCallback callback, gpointer user_data);
 void         gis_page_apply_cancel (GisPage *page);
 void         gis_page_apply_complete (GisPage *page, gboolean valid);
+gboolean     gis_page_go_back (GisPage *page);
 gboolean     gis_page_get_applying (GisPage *page);
 gboolean     gis_page_save_data (GisPage  *page,
                                  GError  **error);
diff --git a/gnome-initial-setup/gnome-initial-setup.c b/gnome-initial-setup/gnome-initial-setup.c
index 7ca2bc2..85375bf 100644
--- a/gnome-initial-setup/gnome-initial-setup.c
+++ b/gnome-initial-setup/gnome-initial-setup.c
@@ -40,6 +40,9 @@
 #include "pages/parental-controls/gis-parental-controls-page.h"
 #include "pages/password/gis-password-page.h"
 #include "pages/summary/gis-summary-page.h"
+#include "pages/ubuntu-report/gis-ubuntu-report-page.h"
+#include "pages/ubuntu-pro/gis-ubuntupro-page.h"
+#include "pages/apps/gis-apps-page.h"
 
 #define VENDOR_PAGES_GROUP "pages"
 #define VENDOR_SKIP_KEY "skip"
@@ -78,6 +81,16 @@ static PageData page_table[] = {
   { NULL },
 };
 
+static PageData ubuntu_page_table[] = {
+  PAGE (privacy,        FALSE),
+  PAGE (ubuntu_pro,     FALSE),
+  PAGE (ubuntu_report,  FALSE),
+  PAGE (account,        TRUE),
+  PAGE (password,       TRUE),
+  PAGE (apps,           FALSE),
+  { NULL },
+};
+
 #undef PAGE
 
 static gboolean
@@ -188,6 +201,25 @@ destroy_page (gpointer data)
     gis_assistant_remove_page (GIS_ASSISTANT (assistant), page);
 }
 
+static gboolean
+is_desktop (const gchar *name)
+{
+  const gchar *xdg_current_desktop;
+  g_auto(GStrv) tokens = NULL;
+  int i;
+
+  xdg_current_desktop = g_getenv ("XDG_CURRENT_DESKTOP");
+  if (xdg_current_desktop == NULL)
+    return FALSE;
+
+  tokens = g_strsplit (xdg_current_desktop, ":", -1);
+  for (i = 0; tokens[i] != NULL; i++)
+    if (strcmp (tokens[i], name) == 0)
+      return TRUE;
+
+  return FALSE;
+}
+
 static void
 rebuild_pages_cb (GisDriver *driver)
 {
@@ -200,7 +232,11 @@ rebuild_pages_cb (GisDriver *driver)
 
   assistant = gis_driver_get_assistant (driver);
   current_page = gis_assistant_get_current_page (assistant);
-  page_data = page_table;
+
+  if (is_desktop ("ubuntu"))
+    page_data = ubuntu_page_table;
+  else
+    page_data = page_table;
 
   g_ptr_array_free (skipped_pages, TRUE);
   skipped_pages = g_ptr_array_new_with_free_func (destroy_page);
@@ -208,7 +244,7 @@ rebuild_pages_cb (GisDriver *driver)
   if (current_page != NULL) {
     destroy_pages_after (assistant, current_page);
 
-    for (page_data = page_table; page_data->page_id != NULL; ++page_data)
+    for (page_data = ubuntu_page_table; page_data->page_id != NULL; ++page_data) // FIXME conditional
       if (g_str_equal (page_data->page_id, GIS_PAGE_GET_CLASS (current_page)->page_id))
         break;
 
diff --git a/gnome-initial-setup/meson.build b/gnome-initial-setup/meson.build
index 2d0374f..b593a01 100644
--- a/gnome-initial-setup/meson.build
+++ b/gnome-initial-setup/meson.build
@@ -53,6 +53,9 @@ dependencies = [
     dependency ('krb5'),
     dependency ('libsecret-1', version: '>= 0.18.8'),
     dependency ('pwquality'),
+    dependency ('snapd-glib-2'),
+    dependency ('libsoup-3.0'),
+    dependency ('sysmetrics'),
     ibus_dep,
     libmalcontent_dep,
     libmalcontent_ui_dep,
diff --git a/gnome-initial-setup/pages/apps/app-center.svg b/gnome-initial-setup/pages/apps/app-center.svg
new file mode 100644
index 0000000..a3cff0c
--- /dev/null
+++ b/gnome-initial-setup/pages/apps/app-center.svg
@@ -0,0 +1,3 @@
+<svg width="90" height="90" viewBox="0 0 90 90" fill="none" xmlns="http://www.w3.org/2000/svg">
+<path fill-rule="evenodd" clip-rule="evenodd" d="M45 0C34.8677 0 26.5401 7.86664 25.0049 18H13.5C6.05995 18 0 24.0599 0 31.5V76.5C0 83.94 6.05995 90 13.5 90H76.5C83.94 90 90 83.94 90 76.5V31.5C90 24.0599 83.94 18 76.5 18H64.9951C63.4599 7.86664 55.1323 0 45 0ZM45 4.5C52.5861 4.5 58.9764 10.2351 60.4336 18H29.5664C31.0236 10.2351 37.4139 4.5 45 4.5ZM40.3242 27H49.5967C51.4149 30.8441 53.1822 34.7414 54.8965 38.6895C56.6107 42.6375 58.3238 46.7887 60.0381 51.1523C60.9962 53.5194 61.9645 55.978 62.9385 58.5H65.25C68.9895 58.5 72 61.5105 72 65.25C72 68.0715 70.2816 70.4787 67.834 71.4902C68.9533 74.5273 70.0905 77.6666 71.2617 81H60.6621C59.9348 78.8701 59.1825 76.7674 58.4033 74.6895C58.0711 73.8036 57.7415 72.9048 57.4189 72H32.124C31.7984 72.9267 31.4663 73.8518 31.1309 74.7686L28.9512 81H18.7383C19.9105 77.6636 21.0371 74.521 22.1396 71.4814C19.7057 70.4638 18 68.0616 18 65.25C18 61.5105 21.0105 58.5 24.75 58.5H26.9648C27.9257 55.9778 28.8737 53.5195 29.8037 51.1523C31.5699 46.7887 33.3101 42.6375 35.0244 38.6895C36.7387 34.7414 38.506 30.8441 40.3242 27ZM44.7627 37.4414C43.5679 40.1946 42.1991 43.548 40.6406 47.4961C39.3433 50.896 37.9757 54.599 36.5625 58.5H52.9717C51.5509 54.5895 50.1575 50.864 48.8145 47.417C47.256 43.417 45.9055 40.0907 44.7627 37.4414ZM24.75 63C23.5035 63 22.5 64.0035 22.5 65.25C22.5 66.4965 23.5035 67.5 24.75 67.5H65.25C66.4965 67.5 67.5 66.4965 67.5 65.25C67.5 64.0035 66.4965 63 65.25 63H24.75Z" fill="#E95420"/>
+</svg>
diff --git a/gnome-initial-setup/pages/apps/apps.gresource.xml b/gnome-initial-setup/pages/apps/apps.gresource.xml
new file mode 100644
index 0000000..6313a06
--- /dev/null
+++ b/gnome-initial-setup/pages/apps/apps.gresource.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<gresources>
+  <gresource prefix="/org/gnome/initial-setup">
+    <file preprocess="xml-stripblanks" alias="gis-apps-page.ui">gis-apps-page.ui</file>
+    <file preprocess="xml-stripblanks">default-snap-icon.svg</file>
+    <file preprocess="xml-stripblanks">app-center.svg</file>
+  </gresource>
+</gresources>
+
diff --git a/gnome-initial-setup/pages/apps/default-snap-icon.svg b/gnome-initial-setup/pages/apps/default-snap-icon.svg
new file mode 100644
index 0000000..0d8dd94
--- /dev/null
+++ b/gnome-initial-setup/pages/apps/default-snap-icon.svg
@@ -0,0 +1 @@
+<svg width="96" height="96" xmlns="http://www.w3.org/2000/svg"><circle fill="#F7F7F7" cx="48" cy="48" r="48"/><path d="M55.71 53.294V32.766l14.248 6.28L55.71 53.293zM28.901 80.102L46.049 47.74l7.728 7.486-24.875 24.876zM19 19l35.502 12.8v22.702L19 19zm58.204 12.8L83 43.634 56.675 31.8h20.529z" fill="#CDCDCD"/></svg>
\ No newline at end of file
diff --git a/gnome-initial-setup/pages/apps/gis-apps-page.c b/gnome-initial-setup/pages/apps/gis-apps-page.c
new file mode 100644
index 0000000..719ed77
--- /dev/null
+++ b/gnome-initial-setup/pages/apps/gis-apps-page.c
@@ -0,0 +1,679 @@
+/* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
+/*
+ * Copyright (C) 2018 Canonical Ltd.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, see <http://www.gnu.org/licenses/>.
+ */
+
+/* Get more apps page {{{1 */
+
+#define PAGE_ID "apps"
+
+#include "config.h"
+#include "gis-apps-page.h"
+#include "apps-resources.h"
+
+#include <glib/gi18n.h>
+#include <gio/gio.h>
+#include <snapd-glib/snapd-glib.h>
+#include <libsoup/soup.h>
+
+#define ICONS_SIZE 64
+
+struct _GisAppsPage {
+  GisPage parent;
+
+  SoupSession *soup_session;
+  SnapdClient *client;
+
+  GtkWidget *main_stack;
+  GtkWidget *spinner;
+  GtkWidget *featured_stack;
+  GtkWidget *prev_featured_button;
+  GtkWidget *next_featured_button;
+
+  GCancellable *cancellable;
+  guint featured_snaps_timeout_id;
+
+  GPtrArray *installed_snaps;
+  GPtrArray *featured_snaps;
+};
+
+G_DEFINE_TYPE (GisAppsPage, gis_apps_page, GIS_TYPE_PAGE);
+
+struct _GisSnapTile
+{
+  GtkFlowBoxChild parent;
+  SnapdSnap *snap;
+  SoupSession *soup_session;
+  GtkWidget *icon;
+};
+G_DECLARE_FINAL_TYPE (GisSnapTile, gis_snap_tile, GIS, SNAP_TILE, GtkFlowBoxChild)
+G_DEFINE_TYPE (GisSnapTile, gis_snap_tile, GTK_TYPE_FLOW_BOX_CHILD)
+
+static void
+gis_snap_tile_init (GisSnapTile *item)
+{
+}
+
+static void
+gis_snap_tile_finalize (GObject *object)
+{
+  g_clear_object (&GIS_SNAP_TILE (object)->snap);
+  g_clear_object (&GIS_SNAP_TILE (object)->soup_session);
+  G_OBJECT_CLASS (gis_snap_tile_parent_class)->finalize (object);
+}
+
+static void
+gis_snap_tile_class_init (GisSnapTileClass *klass)
+{
+  GObjectClass *object_class = G_OBJECT_CLASS (klass);
+
+  object_class->finalize = gis_snap_tile_finalize;
+}
+
+static void
+gis_apps_page_constructed (GObject *object)
+{
+  GisAppsPage *page = GIS_APPS_PAGE (object);
+
+  G_OBJECT_CLASS (gis_apps_page_parent_class)->constructed (object);
+
+  gis_page_set_skippable (GIS_PAGE (page), TRUE);
+
+  gis_page_set_complete (GIS_PAGE (page), TRUE);
+}
+
+static void
+gis_apps_page_dispose (GObject *object)
+{
+  GisAppsPage *page = GIS_APPS_PAGE (object);
+
+  g_clear_object (&page->client);
+  g_clear_object (&page->soup_session);
+  g_clear_pointer (&page->installed_snaps, g_ptr_array_unref);
+  g_clear_pointer (&page->featured_snaps, g_ptr_array_unref);
+
+  g_cancellable_cancel (page->cancellable);
+  g_clear_object (&page->cancellable);
+
+  if (page->featured_snaps_timeout_id != 0) {
+    g_source_remove (page->featured_snaps_timeout_id);
+    page->featured_snaps_timeout_id = 0;
+  }
+
+  G_OBJECT_CLASS (gis_apps_page_parent_class)->dispose (object);
+}
+
+static void
+open_software (GtkButton      *button,
+               const gchar    *uri,
+               GisAppsPage *page)
+{
+  g_autofree gchar *command = NULL;
+  g_autoptr(GAppInfo) info = NULL;
+  g_autoptr(GError) error = NULL;
+
+  g_autofree gchar *storecmd = NULL;
+
+  storecmd = g_find_program_in_path ("snap-store.ubuntu-software");
+  if (storecmd == NULL)
+    storecmd = g_find_program_in_path ("snap-store");
+  if (storecmd == NULL)
+    storecmd = g_find_program_in_path ("gnome-software");
+  if (storecmd == NULL) {
+    g_warning ("Failed to find snap-store or gnome-software");
+    return;
+  }
+
+  info = g_app_info_create_from_commandline (storecmd, NULL, G_APP_INFO_CREATE_NONE, &error);
+  if (info == NULL) {
+     g_warning ("Failed to get launch information from gnome-software: %s", error->message);
+     return;
+  }
+  if (!g_app_info_launch (info, NULL, NULL, &error)) {
+     g_warning ("Failed to launch gnome-software: %s", error->message);
+     return;
+  }
+}
+
+static gboolean
+gis_apps_page_apply (GisPage *page, GCancellable *cancellable)
+{
+  gis_ensure_stamp_files (GIS_PAGE (page)->driver);
+  gis_driver_quit (GIS_PAGE (page)->driver);
+  return FALSE;
+}
+
+static void
+gis_apps_page_locale_changed (GisPage *page)
+{
+  gis_page_set_title (GIS_PAGE (page), _("Ready to go"));
+}
+
+static void
+next_page (GtkWidget *stack, GtkWidget *prev_button, GtkWidget *next_button)
+{
+  GtkWidget *visible_child;
+
+  visible_child = gtk_stack_get_visible_child (GTK_STACK (stack));
+
+  if (visible_child) {
+    GtkWidget *next_sibling = gtk_widget_get_next_sibling (visible_child);
+
+    if (next_sibling) {
+      gtk_stack_set_transition_type (GTK_STACK (stack), GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT);
+      gtk_stack_set_visible_child (GTK_STACK (stack), next_sibling);
+      gtk_widget_set_sensitive (prev_button, TRUE);
+      gtk_widget_set_sensitive (next_button, gtk_widget_get_next_sibling (next_sibling) != NULL);
+    }
+  }
+}
+
+static void
+prev_page (GtkWidget *stack, GtkWidget *prev_button, GtkWidget *next_button)
+{
+  GtkWidget *visible_child;
+
+  visible_child = gtk_stack_get_visible_child (GTK_STACK (stack));
+
+  if (visible_child) {
+    GtkWidget *prev_sibling = gtk_widget_get_prev_sibling (visible_child);
+
+    if (prev_sibling) {
+      gtk_stack_set_transition_type (GTK_STACK (stack), GTK_STACK_TRANSITION_TYPE_SLIDE_RIGHT);
+      gtk_stack_set_visible_child (GTK_STACK (stack), prev_sibling);
+      gtk_widget_set_sensitive (prev_button, gtk_widget_get_prev_sibling (prev_sibling) != NULL);
+      gtk_widget_set_sensitive (next_button, TRUE);
+    }
+  }
+}
+
+static void
+prev_featured (GtkButton   *button,
+               GisAppsPage *page)
+{
+  prev_page (page->featured_stack, page->prev_featured_button, page->next_featured_button);
+}
+
+static void
+next_featured (GtkButton   *button,
+               GisAppsPage *page)
+{
+  next_page (page->featured_stack, page->prev_featured_button, page->next_featured_button);
+}
+
+static void
+gis_apps_page_class_init (GisAppsPageClass *klass)
+{
+  GisPageClass *page_class = GIS_PAGE_CLASS (klass);
+  GObjectClass *object_class = G_OBJECT_CLASS (klass);
+
+  gtk_widget_class_set_template_from_resource (GTK_WIDGET_CLASS (klass), "/org/gnome/initial-setup/gis-apps-page.ui");
+  gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAppsPage, main_stack);
+  gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAppsPage, spinner);
+  gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAppsPage, featured_stack);
+  gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAppsPage, prev_featured_button);
+  gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAppsPage, next_featured_button);
+  gtk_widget_class_bind_template_callback (GTK_WIDGET_CLASS (klass), open_software);
+  gtk_widget_class_bind_template_callback (GTK_WIDGET_CLASS (klass), prev_featured);
+  gtk_widget_class_bind_template_callback (GTK_WIDGET_CLASS (klass), next_featured);
+
+  page_class->page_id = PAGE_ID;
+  page_class->apply = gis_apps_page_apply;
+  page_class->locale_changed = gis_apps_page_locale_changed;
+  object_class->constructed = gis_apps_page_constructed;
+  object_class->dispose = gis_apps_page_dispose;
+}
+
+static GdkPaintable *
+load_snap_icon (SnapdSnap *snap)
+{
+  const gchar *url;
+  g_autoptr(SnapdClient) client = NULL;
+  g_autoptr(SnapdIcon) icon = NULL;
+  g_autoptr(GInputStream) input_stream = NULL;
+  g_autoptr(GdkTexture) texture = NULL;
+  g_autoptr(GError) error = NULL;
+
+  url = snapd_snap_get_icon (snap);
+  if (url == NULL || !g_str_has_prefix (url, "/v2/icons/"))
+    return NULL;
+
+  client = snapd_client_new ();
+  icon = snapd_client_get_icon_sync (client, snapd_snap_get_name (snap), NULL, &error);
+  if (icon == NULL) {
+     g_warning ("Failed to get snap icon: %s", error->message);
+     return NULL;
+  }
+
+  texture = gdk_texture_new_from_bytes (snapd_icon_get_data (icon), &error);
+  if (texture == NULL) {
+     g_warning ("Failed to decode snap icon: %s", error->message);
+     return NULL;
+  }
+
+  return GDK_PAINTABLE (g_steal_pointer (&texture));
+}
+
+static GdkPaintable *
+load_local_icon (GisSnapTile *tile, const gchar *name, GError **error)
+{
+  if (name && name[0] == '/') {
+    g_autoptr (GFile) file = g_file_new_for_path (name);
+    GdkTexture *texture = gdk_texture_new_from_file (file, error);
+
+    if (!texture)
+      return NULL;
+
+    return GDK_PAINTABLE (texture);
+  } else {
+    GtkIconTheme *icon_theme;
+    g_autoptr (GtkIconPaintable) icon = NULL;
+
+    icon_theme = gtk_icon_theme_get_for_display (gtk_widget_get_display (GTK_WIDGET (tile)));
+    icon = gtk_icon_theme_lookup_icon (icon_theme, name, NULL, ICONS_SIZE,
+                                       gtk_widget_get_scale_factor (GTK_WIDGET (tile)),
+                                       gtk_widget_get_direction (GTK_WIDGET (tile)),
+                                       0);
+
+    if (!icon)
+      return NULL;
+
+    return GDK_PAINTABLE (g_steal_pointer (&icon));
+  }
+}
+
+static GdkPaintable *
+load_desktop_icon (GisSnapTile *tile)
+{
+  SnapdSnap *snap = tile->snap;
+  GPtrArray *apps;
+  guint i;
+
+  apps = snapd_snap_get_apps (snap);
+  for (i = 0; i < apps->len; i++) {
+    SnapdApp *app = g_ptr_array_index (apps, i);
+    const gchar *desktop_file_path;
+    g_autoptr(GKeyFile) desktop_file = NULL;
+    g_autofree gchar *icon = NULL;
+    g_autoptr(GdkPaintable) paintable = NULL;
+    g_autoptr(GError) error = NULL;
+
+    desktop_file_path = snapd_app_get_desktop_file (app);
+    if (desktop_file_path == NULL)
+      continue;
+
+    desktop_file = g_key_file_new ();
+    if (!g_key_file_load_from_file (desktop_file, desktop_file_path, G_KEY_FILE_NONE, &error)) {
+      g_warning ("Failed to load desktop file %s: %s", desktop_file_path, error->message);
+      continue;
+    }
+
+    icon = g_key_file_get_string (desktop_file, G_KEY_FILE_DESKTOP_GROUP, G_KEY_FILE_DESKTOP_KEY_ICON, &error);
+    if (icon == NULL) {
+      g_warning ("Failed to get desktop file icon %s: %s", desktop_file_path, error->message);
+      continue;
+    }
+
+    paintable = load_local_icon (tile, icon, &error);
+    if (paintable == NULL) {
+      g_warning ("Failed to load icon %s: %s", icon, error->message);
+      continue;
+    }
+
+    return g_steal_pointer (&paintable);
+  }
+
+  return NULL;
+}
+
+static void
+icon_pixbuf_new_cb (GObject *object, GAsyncResult *result, gpointer user_data)
+{
+  g_autoptr (GTask) task = user_data;
+  g_autoptr(GdkTexture) texture = NULL;
+  g_autoptr(GError) error = NULL;
+  g_autoptr(GdkPixbuf) pixbuf = NULL;
+  GisSnapTile *tile = g_task_get_task_data (task);
+
+  pixbuf = gdk_pixbuf_new_from_stream_finish (result, &error);
+  if (pixbuf == NULL) {
+    g_warning ("Failed to load icon: %s", error->message);
+    return;
+  }
+
+  gtk_image_set_from_pixbuf (GTK_IMAGE (tile->icon), pixbuf);
+}
+
+static void
+icon_cb (GObject *object, GAsyncResult *result, gpointer user_data)
+{
+  g_autoptr (GTask) task = user_data;
+  GCancellable *cancellable = g_task_get_cancellable (task);
+  g_autoptr(GInputStream) stream = NULL;
+  g_autoptr(GdkPixbuf) pixbuf = NULL;
+  g_autoptr(GError) error = NULL;
+
+  stream = soup_session_send_finish (SOUP_SESSION (object), result, &error);
+  if (stream == NULL) {
+    g_warning ("Failed to download icon: %s", error->message);
+    return;
+  }
+
+  gdk_pixbuf_new_from_stream_at_scale_async (stream, -1, -1, TRUE, cancellable,
+                                             icon_pixbuf_new_cb,
+                                             g_steal_pointer (&task));
+}
+
+static void
+load_store_icon (GisSnapTile *tile, GCancellable *cancellable)
+{
+  g_autoptr (GTask) task = NULL;
+  const gchar *url;
+  g_autoptr(SoupMessage) message = NULL;
+
+  url = snapd_snap_get_icon (tile->snap);
+  if (url == NULL || !(g_str_has_prefix (url, "http://") || g_str_has_prefix (url, "https://")))
+    return;
+
+  task = g_task_new (tile, cancellable, NULL, NULL);
+  g_task_set_task_data (task, g_object_ref (tile), g_object_unref);
+
+  message = soup_message_new ("GET", url);
+  soup_session_send_async (tile->soup_session, message, G_PRIORITY_DEFAULT,
+                           cancellable, icon_cb, g_steal_pointer (&task));
+}
+
+static void
+load_icon (GisSnapTile *tile, GCancellable *cancellable)
+{
+  g_autoptr(GdkPaintable) paintable = NULL;
+  g_autoptr(GError) error = NULL;
+
+  /* Add placeholder icon */
+  gtk_image_set_from_resource (GTK_IMAGE (tile->icon),
+    "/org/gnome/initial-setup/default-snap-icon.svg");
+
+  paintable = load_snap_icon (tile->snap);
+  if (paintable != NULL) {
+    gtk_image_set_from_paintable (GTK_IMAGE (tile->icon), paintable);
+    return;
+  }
+
+  paintable = load_desktop_icon (tile);
+  if (paintable != NULL) {
+    gtk_image_set_from_paintable (GTK_IMAGE (tile->icon), paintable);
+    return;
+  }
+
+  load_store_icon (tile, cancellable);
+}
+
+static GtkWidget *
+gis_snap_tile_new (SnapdSnap *snap, SoupSession *soup_session, GCancellable *cancellable)
+{
+  const gchar *title;
+  GisSnapTile *tile;
+  GtkWidget *box, *label;
+
+  tile = g_object_new (gis_snap_tile_get_type (), NULL);
+  tile->snap = g_object_ref (snap);
+  tile->soup_session = g_object_ref (soup_session);
+
+  title = snapd_snap_get_title (snap);
+  if (title == NULL)
+    title = snapd_snap_get_name (snap);
+
+  box = gtk_box_new (GTK_ORIENTATION_VERTICAL, 6);
+  gtk_flow_box_child_set_child (GTK_FLOW_BOX_CHILD (tile), box);
+  gtk_widget_set_halign (box, GTK_ALIGN_CENTER);
+  gtk_widget_set_valign (box, GTK_ALIGN_CENTER);
+
+  tile->icon = gtk_image_new ();
+  gtk_image_set_pixel_size (GTK_IMAGE (tile->icon), 64);
+  gtk_box_append (GTK_BOX (box), tile->icon);
+
+  label = gtk_label_new (title);
+  gtk_label_set_justify (GTK_LABEL (label), GTK_JUSTIFY_CENTER);
+  gtk_label_set_wrap (GTK_LABEL (label), TRUE);
+  gtk_box_append (GTK_BOX (box), label);
+
+  load_icon (tile, cancellable);
+
+  return GTK_WIDGET (tile);
+}
+
+static gboolean
+contains_snap (GPtrArray *snaps, const gchar *name)
+{
+  guint i;
+
+  for (i = 0; i < snaps->len; i++) {
+    SnapdSnap *snap = g_ptr_array_index (snaps, i);
+    if (g_strcmp0 (snapd_snap_get_name (snap), name) == 0)
+      return TRUE;
+  }
+
+  return FALSE;
+}
+
+static void
+on_app_clicked (GtkWidget *flow_box, GtkFlowBoxChild *child, gpointer user_data)
+{
+  GisSnapTile *tile = NULL;
+  g_autofree gchar *url = NULL;
+  g_autoptr (GError) error = NULL;
+
+  if (!GIS_IS_SNAP_TILE (child))
+      return;
+
+  tile = GIS_SNAP_TILE (child);
+
+  url = g_strdup_printf ("snap://%s", snapd_snap_get_name (tile->snap));
+  if (!g_app_info_launch_default_for_uri (url, NULL, &error))
+     g_warning ("Failed to open %s: %s", url, error->message);
+}
+
+static void
+add_tile (GtkWidget *stack, GtkWidget *tile)
+{
+  GtkWidget *flow_box = NULL;
+  GtkWidget *child;
+  gint count = 0;
+
+  flow_box = gtk_widget_get_last_child (stack);
+  for (child = flow_box ? gtk_widget_get_first_child (flow_box) : NULL;
+       child != NULL;
+       child = gtk_widget_get_next_sibling (child)) {
+        count++;
+  }
+
+  if (flow_box == NULL || count >= 15) {
+    count = 0;
+    flow_box = gtk_flow_box_new ();
+    gtk_flow_box_set_min_children_per_line (GTK_FLOW_BOX (flow_box), 5);
+    gtk_flow_box_set_max_children_per_line (GTK_FLOW_BOX (flow_box), 5);
+    gtk_flow_box_set_selection_mode (GTK_FLOW_BOX (flow_box), GTK_SELECTION_NONE);
+    g_signal_connect (flow_box, "child-activated",
+                      G_CALLBACK (on_app_clicked), NULL);
+    gtk_widget_set_visible (flow_box, TRUE);
+    gtk_flow_box_set_row_spacing (GTK_FLOW_BOX (flow_box), 10);
+    gtk_flow_box_set_column_spacing (GTK_FLOW_BOX (flow_box), 10);
+    gtk_stack_add_child (GTK_STACK (stack), flow_box);
+  }
+
+  gtk_flow_box_append (GTK_FLOW_BOX (flow_box), tile);
+}
+
+static void
+gis_app_page_populate_featured_snaps (GisAppsPage *page)
+{
+    GtkSizeGroup *size_group;
+    guint i, n_tiles = 0, n_extra = 0;
+    GtkWidget *first_child;
+
+    size_group = gtk_size_group_new (GTK_SIZE_GROUP_BOTH);
+
+    for (i = 0; i < page->featured_snaps->len; i++) {
+      SnapdSnap *snap = g_ptr_array_index (page->featured_snaps, i);
+      GtkWidget *tile;
+
+      /* Skip if already installed */
+      if (page->installed_snaps != NULL && contains_snap (page->installed_snaps, snapd_snap_get_name (snap)))
+        continue;
+
+      tile = gis_snap_tile_new (snap, page->soup_session, page->cancellable);
+      gtk_widget_set_visible (tile, TRUE);
+      gtk_size_group_add_widget (size_group, tile);
+
+      add_tile (page->featured_stack, tile);
+      n_tiles += 1;
+    }
+
+    /* Add spacers to fill up page */
+    if (n_tiles % 15 != 0)
+      n_extra = 15 - n_tiles % 15;
+    for (i = 0; i < n_extra; i++) {
+      GtkWidget *spacer = gtk_label_new ("");
+      gtk_widget_set_visible (spacer, TRUE);
+      gtk_size_group_add_widget (size_group, spacer);
+      add_tile (page->featured_stack, spacer);
+    }
+
+    first_child = gtk_widget_get_first_child (page->featured_stack);
+    gtk_widget_set_visible (page->next_featured_button,
+      first_child && gtk_widget_get_next_sibling (first_child) != NULL);
+
+    gtk_widget_set_visible (page->prev_featured_button,
+      first_child && gtk_widget_get_next_sibling (first_child) != NULL);
+}
+
+static void
+gis_apps_page_try_to_get_featured_snaps (GisAppsPage *page);
+
+static void
+gis_app_page_on_featured_snaps_ready (GObject *source_object,
+                                      GAsyncResult *res,
+                                      gpointer user_data)
+{
+  SnapdClient *client = SNAPD_CLIENT (source_object);
+  g_autoptr(GPtrArray) featured_snaps = NULL;
+  g_autoptr(GError) error = NULL;
+
+  featured_snaps = snapd_client_find_section_finish (client, res, NULL, &error);
+
+  if (featured_snaps == NULL) {
+    if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED)) {
+      g_warning ("Failed to get featured snaps: %s", error->message);
+      /* On a fresh boot interacting with snapd can fail (see LP: #1824188).
+       * In case of error, try to get the featured snaps again.*/
+      gis_apps_page_try_to_get_featured_snaps (GIS_APPS_PAGE (user_data));
+    }
+  } else {
+    GisAppsPage *page = GIS_APPS_PAGE (user_data);
+
+    page->featured_snaps = g_steal_pointer (&featured_snaps);
+
+    gtk_spinner_stop (GTK_SPINNER (page->spinner));
+    gtk_stack_set_visible_child_name (GTK_STACK (page->main_stack), "page_snaps");
+
+    gis_app_page_populate_featured_snaps (page);
+  }
+}
+
+static gboolean
+gis_app_page_get_featured_snaps_timeout (gpointer user_data)
+{
+  GisAppsPage *page = GIS_APPS_PAGE (user_data);
+
+  page->featured_snaps_timeout_id = 0;
+
+  snapd_client_find_section_async (page->client,
+                                   SNAPD_FIND_FLAGS_NONE,
+                                   "ubuntu-firstrun",
+                                   NULL,
+                                   page->cancellable,
+                                   gis_app_page_on_featured_snaps_ready,
+                                   page);
+
+  return G_SOURCE_REMOVE;
+}
+
+void
+gis_apps_page_try_to_get_featured_snaps (GisAppsPage *page)
+{
+  g_return_if_fail (page->featured_snaps == NULL);
+
+  if (page->featured_snaps_timeout_id == 0)
+    page->featured_snaps_timeout_id = g_timeout_add_seconds (1, gis_app_page_get_featured_snaps_timeout, page);
+}
+
+void
+gis_app_page_on_installed_snaps_ready (GObject *source_object,
+                                       GAsyncResult *res,
+                                       gpointer user_data)
+{
+  GisAppsPage *page;
+  SnapdClient *client = SNAPD_CLIENT (source_object);
+  g_autoptr(GPtrArray) installed_snaps = NULL;
+  g_autoptr(GError) error = NULL;
+
+  installed_snaps = snapd_client_get_snaps_finish (client, res, &error);
+  if (installed_snaps == NULL) {
+    if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED)) {
+      /* Discard errors in getting the list of installed snaps. Print out a
+       * warning here and avoid to use installed_snaps to filter the featured
+       * snaps. */
+      g_warning ("Failed to get installed snaps: %s", error->message);
+    } else {
+      return;
+    }
+  }
+
+  page = GIS_APPS_PAGE (user_data);
+
+  page->installed_snaps = g_steal_pointer (&installed_snaps);
+  gis_apps_page_try_to_get_featured_snaps (page);
+}
+
+static void
+gis_apps_page_init (GisAppsPage *page)
+{
+  g_resources_register (apps_get_resource ());
+
+  gtk_widget_init_template (GTK_WIDGET (page));
+
+  page->soup_session = soup_session_new ();
+  page->client = snapd_client_new ();
+  page->cancellable = g_cancellable_new ();
+
+  gtk_stack_set_visible_child_name (GTK_STACK (page->main_stack), "page_spinner");
+  gtk_spinner_start (GTK_SPINNER (page->spinner));
+
+  snapd_client_get_snaps_async (page->client,
+                                SNAPD_GET_SNAPS_FLAGS_NONE,
+                                NULL,
+                                page->cancellable,
+                                gis_app_page_on_installed_snaps_ready,
+                                page);
+}
+
+GisPage *
+gis_prepare_apps_page (GisDriver *driver)
+{
+  return g_object_new (GIS_TYPE_APPS_PAGE,
+                       "driver", driver,
+                       NULL);
+}
diff --git a/gnome-initial-setup/pages/apps/gis-apps-page.h b/gnome-initial-setup/pages/apps/gis-apps-page.h
new file mode 100644
index 0000000..e451214
--- /dev/null
+++ b/gnome-initial-setup/pages/apps/gis-apps-page.h
@@ -0,0 +1,33 @@
+/* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
+/*
+ * Copyright (C) 2018 Canonical Ltd.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef __GIS_APPS_PAGE_H__
+#define __GIS_APPS_PAGE_H__
+
+#include "gnome-initial-setup.h"
+
+G_BEGIN_DECLS
+
+#define GIS_TYPE_APPS_PAGE            (gis_apps_page_get_type ())
+G_DECLARE_FINAL_TYPE (GisAppsPage, gis_apps_page, GIS, APPS_PAGE, GisPage);
+
+GisPage *gis_prepare_apps_page (GisDriver *driver);
+
+G_END_DECLS
+
+#endif /* __GIS_APPS_PAGE_H__ */
diff --git a/gnome-initial-setup/pages/apps/gis-apps-page.ui b/gnome-initial-setup/pages/apps/gis-apps-page.ui
new file mode 100644
index 0000000..103f2f9
--- /dev/null
+++ b/gnome-initial-setup/pages/apps/gis-apps-page.ui
@@ -0,0 +1,119 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<interface>
+  <requires lib="gtk" version="4.0"/>
+  <template class="GisAppsPage" parent="GisPage">
+
+    <child>
+      <object class="AdwPreferencesPage">
+
+        <child>
+          <object class="AdwPreferencesGroup">
+            <child>
+              <object class="GtkImage">
+                <property name="resource">/org/gnome/initial-setup/app-center.svg</property>
+                <property name="height-request">77</property>
+              </object>
+            </child>
+          </object>
+        </child>
+        <child>
+          <object class="AdwPreferencesGroup">
+            <child>
+              <object class="GisPageHeader">
+                <property name="title" translatable="yes">You&apos;re ready to go!</property>
+                <property name="subtitle" translatable="yes">You can use App Center to install apps like these:</property>
+                <property name="show-icon">0</property>
+              </object>
+            </child>
+          </object>
+        </child>
+
+        <child>
+          <object class="AdwPreferencesGroup">
+          <child>
+            <object class="GtkBox">
+              <property name="orientation">vertical</property>
+              <child>
+                <object class="GtkStack" id="main_stack">
+                  <property name="margin_top">6</property>
+                  <property name="hexpand">1</property>
+                  <property name="transition_type">crossfade</property>
+                  <child>
+                    <object class="GtkStackPage">
+                      <property name="name">page_spinner</property>
+                      <property name="child">
+                        <object class="GtkSpinner" id="spinner"/>
+                      </property>
+                    </object>
+                  </child>
+                  <child>
+                    <object class="GtkStackPage">
+                      <property name="name">page_snaps</property>
+                      <property name="child">
+                        <object class="GtkBox">
+                          <property name="hexpand">1</property>
+                          <property name="spacing">10</property>
+                          <child>
+                            <object class="GtkButton" id="prev_featured_button">
+                              <property name="visible">0</property>
+                              <property name="sensitive">0</property>
+                              <property name="valign">center</property>
+                              <signal name="clicked" handler="prev_featured"/>
+                              <style>
+                                <class name="flat"/>
+                                <class name="circular"/>
+                              </style>
+                              <child>
+                                <object class="GtkImage">
+                                  <property name="icon_name">go-previous-symbolic</property>
+                                </object>
+                              </child>
+                            </object>
+                          </child>
+                          <child>
+                            <object class="GtkStack" id="featured_stack">
+                              <property name="hexpand">1</property>
+                            </object>
+                          </child>
+                          <child>
+                            <object class="GtkButton" id="next_featured_button">
+                              <property name="visible">0</property>
+                              <property name="valign">center</property>
+                              <signal name="clicked" handler="next_featured"/>
+                              <style>
+                                <class name="flat"/>
+                                <class name="circular"/>
+                              </style>
+                              <child>
+                                <object class="GtkImage">
+                                  <property name="icon_name">go-next-symbolic</property>
+                                </object>
+                              </child>
+                            </object>
+                          </child>
+                        </object>
+                      </property>
+                    </object>
+                  </child>
+                </object>
+              </child>
+
+              <child>
+                <object class="GtkButton">
+                  <property name="margin_top">12</property>
+                  <property name="halign">end</property>
+                  <property name="label" translatable="1">Open App Center now</property>
+                  <signal name="clicked" handler="open_software"/>
+                </object>
+              </child>
+            </object>
+          </child>
+          </object>
+        </child>
+
+        </object>
+    </child>
+
+
+  </template>
+</interface>
diff --git a/gnome-initial-setup/pages/apps/meson.build b/gnome-initial-setup/pages/apps/meson.build
new file mode 100644
index 0000000..dec2b38
--- /dev/null
+++ b/gnome-initial-setup/pages/apps/meson.build
@@ -0,0 +1,10 @@
+sources += gnome.compile_resources(
+    'apps-resources',
+    files('apps.gresource.xml'),
+    c_name: 'apps'
+)
+
+sources += files(
+    'gis-apps-page.c',
+    'gis-apps-page.h',
+)
diff --git a/gnome-initial-setup/pages/meson.build b/gnome-initial-setup/pages/meson.build
index 8d327f6..2ed2a5f 100644
--- a/gnome-initial-setup/pages/meson.build
+++ b/gnome-initial-setup/pages/meson.build
@@ -9,6 +9,9 @@ pages = [
    'software',
    'summary',
    'welcome',
+   'ubuntu-pro',
+   'ubuntu-report',
+   'apps',
 ]
 
 if libmalcontent_dep.found() and libmalcontent_ui_dep.found()
diff --git a/gnome-initial-setup/pages/privacy/gis-privacy-page.c b/gnome-initial-setup/pages/privacy/gis-privacy-page.c
index 323e1aa..7750cf8 100644
--- a/gnome-initial-setup/pages/privacy/gis-privacy-page.c
+++ b/gnome-initial-setup/pages/privacy/gis-privacy-page.c
@@ -247,7 +247,7 @@ gis_privacy_page_apply (GisPage *gis_page,
 static void
 gis_privacy_page_locale_changed (GisPage *page)
 {
-  gis_page_set_title (GIS_PAGE (page), _("Privacy"));
+  gis_page_set_title (GIS_PAGE (page), _("Welcome to Ubuntu"));
 }
 
 static void
diff --git a/gnome-initial-setup/pages/summary/gis-summary-page.c b/gnome-initial-setup/pages/summary/gis-summary-page.c
index 5e90e8a..d34aad3 100644
--- a/gnome-initial-setup/pages/summary/gis-summary-page.c
+++ b/gnome-initial-setup/pages/summary/gis-summary-page.c
@@ -189,7 +189,7 @@ done_cb (GtkButton *button, GisSummaryPage *page)
       log_user_in (page);
       break;
     case GIS_DRIVER_MODE_EXISTING_USER:
-      g_application_quit (G_APPLICATION (GIS_PAGE (page)->driver));
+      gis_driver_quit (GIS_PAGE (page)->driver);
     default:
       break;
     }
diff --git a/gnome-initial-setup/pages/ubuntu-pro/checkmark.svg b/gnome-initial-setup/pages/ubuntu-pro/checkmark.svg
new file mode 100644
index 0000000..a0c8602
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/checkmark.svg
@@ -0,0 +1 @@
+<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"><g fill="none" fill-rule="nonzero"><path fill="#0e8420" d="M8 1a7 7 0 110 14A7 7 0 018 1zm2.83 3.502L6.863 9.884 5.174 8.096l-1.09 1.03 2.92 3.096 5.034-6.83-1.208-.89z"/><path fill="#fff" d="M10.83 4.502l1.208.89-5.033 6.83-2.922-3.096 1.091-1.03 1.689 1.789z"/></g></svg>
\ No newline at end of file
diff --git a/gnome-initial-setup/pages/ubuntu-pro/fail.svg b/gnome-initial-setup/pages/ubuntu-pro/fail.svg
new file mode 100644
index 0000000..e3c9a52
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/fail.svg
@@ -0,0 +1 @@
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="16" height="16"><defs><filter id="darkreader-image-filter"><feColorMatrix type="matrix" values="-0.193 -0.490 -1.120 0.000 1.698 -0.965 0.293 -1.105 0.000 1.673 -0.946 -0.489 -0.296 0.000 1.630 0.000 0.000 0.000 1.000 0.000"/></filter></defs><image width="16" height="16" filter="url(#darkreader-image-filter)" xlink:href="data:image/svg+xml,%3Csvg width='16' height='16' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Ccircle stroke='%23c7162b' stroke-width='1.5' fill='%23c7162b' cx='8' cy='8' r='6.25'/%3E%3Cpath fill='%23FFF' fill-rule='nonzero' d='M10.282 4.638l1.06 1.06L9.05 7.99l2.293 2.292-1.06 1.06L7.99 9.05 5.7 11.343l-1.06-1.06 2.29-2.293L4.64 5.7l1.06-1.06 2.291 2.29z'/%3E%3C/g%3E%3C/svg%3E"/></svg>
\ No newline at end of file
diff --git a/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-attach-page.ui b/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-attach-page.ui
new file mode 100644
index 0000000..0c82766
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-attach-page.ui
@@ -0,0 +1,210 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<interface>
+  <requires lib="gtk" version="4.0"/>
+  <template class="GisUbuntuProAttachPage" parent="AdwBin">
+  <child>
+  <object class="GtkBox" id="attach_page">
+    <property name="visible">True</property>
+    <property name="can-focus">False</property>
+    <property name="orientation">vertical</property>
+    <property name="margin-start">12</property>
+    <property name="margin-top">12</property>
+    <property name="margin-end">12</property>
+        <child>
+          <object class="GtkLabel">
+            <property name="visible">True</property>
+            <property name="can-focus">False</property>
+            <property name="halign">start</property>
+            <property name="margin-top">3</property>
+            <property name="margin-bottom">0</property>
+            <property name="label" translatable="yes">&lt;b&gt;Enable Ubuntu Pro&lt;/b&gt;</property>
+            <property name="use-markup">True</property>
+            <property name="wrap">True</property>
+            <property name="xalign">0</property>
+            <attributes>
+              <attribute name="scale" value="1.4"/>
+            </attributes>
+          </object>
+        </child>
+        <child>
+          <object class="GtkSeparator">
+            <property name="visible">True</property>
+            <property name="can-focus">False</property>
+            <property name="margin-top">10</property>
+            <property name="margin-bottom">10</property>
+          </object>
+        </child>
+        <child>
+          <object class="GtkBox">
+            <property name="visible">True</property>
+            <property name="can-focus">False</property>
+            <property name="spacing">18</property>
+            <property name="margin-start">30</property>
+            <property name="margin-top">12</property>
+            <property name="margin-bottom">12</property>
+            <child>
+              <object class="GtkPicture" id="ubuntu_pro_logo">
+                <property name="visible">True</property>
+                <property name="can-focus">False</property>
+                <property name="can-shrink">False</property>
+                <property name="content-fit">scale-down</property>
+                <!-- This has no effect?? >( -->
+                <property name="halign">start</property>
+              </object>
+            </child>
+            <child>
+              <object class="GtkLabel">
+                <property name="visible">True</property>
+                <property name="can-focus">True</property>
+                <property name="label" translatable="yes">Upgrade this machine to Ubuntu Pro for security updates on a much wider range of packages, until 2034. Fulfill FedRAMP, FIPS, STIG and HIPAA and other compliance and hardening requirements with certified tooling and crypto-modules. Free for up to 5 machines.
+
+More information on &lt;a href="https://ubuntu.com/pro"&gt;ubuntu.com/pro&lt;/a&gt;.</property>
+                <property name="use-markup">True</property>
+                <property name="wrap">True</property>
+                <property name="max-width-chars">130</property>
+              </object>
+            </child>
+          </object>
+        </child>
+        <child>
+          <object class="GtkCheckButton" id="magic_radio">
+            <property name="label" translatable="yes">Attach machine via your Ubuntu One account</property>
+            <property name="visible">True</property>
+            <property name="can-focus">True</property>
+            <property name="receives-default">False</property>
+            <property name="margin-top">40</property>
+            <property name="margin-bottom">6</property>
+            <property name="margin-start">30</property>
+            <signal name="activate" handler="on_magic_clicked" swapped="no"/>
+          </object>
+        </child>
+        <child>
+          <object class="GtkBox">
+            <property name="visible">True</property>
+            <property name="can-focus">False</property>
+            <property name="margin-start">24</property>
+            <child>
+              <object class="GtkLabel" id="pin_label">
+                <property name="selectable">True</property>
+                <property name="visible">True</property>
+                <property name="can-focus">False</property>
+                <property name="margin-top">8</property>
+                <property name="margin-bottom">8</property>
+                <property name="margin-start">30</property>
+                <property name="halign">start</property>
+                <attributes>
+                  <attribute name="scale" value="2"/>
+                </attributes>
+              </object>
+            </child>
+            <child>
+              <object class="GtkFixed">
+                <property name="visible">True</property>
+                <property name="valign">center</property>
+                <property name="margin-start">12</property>
+                <property name="margin-end">6</property>
+                <child>
+                  <object class="GtkSpinner" id="pin_spinner">
+                    <property name="visible">True</property>
+                    <property name="valign">center</property>
+                  </object>
+                </child>
+                <child>
+                  <object class="GtkImage" id="pin_status_icon">
+                    <property name="visible">False</property>
+                    <property name="valign">center</property>
+                  </object>
+                </child>
+              </object>
+            </child>
+            <child>
+              <object class="GtkLabel" id="pin_status">
+                <property name="visible">True</property>
+                <property name="use-markup">True</property>
+                <property name="halign">start</property>
+              </object>
+            </child>
+          </object>
+        </child>
+        <child>
+          <object class="GtkLabel" id="pin_hint">
+            <property name="visible">True</property>
+            <property name="can-focus">False</property>
+            <property name="margin-top">6</property>
+            <property name="margin-bottom">8</property>
+            <property name="margin-start">54</property>
+            <property name="halign">start</property>
+          </object>
+        </child>
+        <child>
+          <object class="GtkCheckButton" id="token_radio">
+            <property name="label" translatable="yes">Or add token manually</property>
+            <property name="visible">True</property>
+            <property name="can-focus">True</property>
+            <property name="receives-default">False</property>
+            <property name="margin-start">30</property>
+            <property name="margin-top">20</property>
+            <property name="group">magic_radio</property>
+            <signal name="toggled" handler="on_radio_toggled" swapped="no"/>
+          </object>
+        </child>
+        <child>
+          <object class="GtkLabel">
+            <property name="visible">True</property>
+            <property name="use-markup">True</property>
+            <property name="margin-start">55</property>
+            <property name="label" translatable="yes">&lt;small&gt;From your admin, or from ubuntu.com/pro&lt;/small&gt;</property>
+            <property name="halign">start</property>
+          </object>
+        </child>
+        <child>
+          <object class="GtkBox">
+            <property name="visible">True</property>
+            <property name="can-focus">False</property>
+            <property name="margin-start">55</property>
+            <property name="margin-top">12</property>
+            <property name="margin-bottom">12</property>
+            <child>
+              <object class="GtkEntry" id="token_field">
+                <property name="visible">True</property>
+                <property name="sensitive">False</property>
+                <property name="can-focus">True</property>
+                <property name="width-chars">35</property>
+                <property name="placeholder-text" translatable="yes">Token</property>
+                <property name="valign">center</property>
+                <signal name="activate" handler="request_token_attach" swapped="no"/>
+                <signal name="changed" handler="on_token_typing" swapped="no"/>
+              </object>
+            </child>
+            <child>
+              <object class="GtkFixed">
+                <property name="visible">True</property>
+                <property name="valign">center</property>
+                <property name="margin-start">6</property>
+                <property name="margin-end">4</property>
+                <child>
+                  <object class="GtkSpinner" id="token_spinner">
+                    <property name="visible">True</property>
+                    <property name="valign">center</property>
+                  </object>
+                </child>
+                <child>
+                  <object class="GtkImage" id="token_status_icon">
+                    <property name="visible">False</property>
+                    <property name="valign">center</property>
+                  </object>
+                </child>
+              </object>
+            </child>
+            <child>
+              <object class="GtkLabel" id="token_status">
+                <property name="visible">True</property>
+                <property name="valign">center</property>
+              </object>
+            </child>
+          </object>
+        </child>
+  </object>
+  </child>
+</template>
+</interface>
diff --git a/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-offer-page.ui b/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-offer-page.ui
new file mode 100644
index 0000000..94ef395
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-offer-page.ui
@@ -0,0 +1,158 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<interface>
+  <requires lib="gtk" version="4.0"/>
+  <template class="GisUbuntuProOfferPage" parent="AdwBin">
+    <child>
+      <object class="GtkBox" id="offer_page">
+        <property name="margin-start">12</property>
+        <property name="margin-top">12</property>
+        <property name="margin-end">12</property>
+        <property name="visible">True</property>
+        <property name="can-focus">False</property>
+        <property name="orientation">vertical</property>
+        <property name="hexpand">true</property>
+        <property name="vexpand">true</property>
+        <child>
+          <object class="GtkLabel">
+            <property name="visible">True</property>
+            <property name="can-focus">False</property>
+            <property name="halign">start</property>
+            <property name="margin-top">3</property>
+            <property name="margin-bottom">0</property>
+            <property name="label" translatable="yes">&lt;b&gt;Enable Ubuntu Pro&lt;/b&gt;</property>
+            <property name="use-markup">True</property>
+            <property name="wrap">True</property>
+            <property name="xalign">0</property>
+            <attributes>
+              <attribute name="scale" value="1.4"/>
+            </attributes>
+          </object>
+        </child>
+        <child>
+          <object class="GtkSeparator">
+            <property name="visible">True</property>
+            <property name="can-focus">False</property>
+            <property name="margin-top">10</property>
+            <property name="margin-bottom">10</property>
+          </object>
+        </child>
+        <child>
+          <object class="GtkBox">
+          <property name="visible">True</property>
+          <property name="can-focus">False</property>
+          <property name="spacing">18</property>
+          <property name="margin-start">30</property>
+          <property name="margin-top">12</property>
+            <child>
+              <object class="GtkPicture" id="ubuntu_pro_logo">
+                <property name="visible">True</property>
+                <property name="can-focus">False</property>
+                <property name="can-shrink">False</property>
+                <property name="content-fit">scale-down</property>
+                <!-- This has no effect?? >( -->
+                <property name="halign">start</property>
+              </object>
+            </child>
+            <child>
+              <object class="GtkLabel">
+                <property name="visible">True</property>
+                <property name="can-focus">True</property>
+                <property name="label" translatable="yes">Upgrade this machine to Ubuntu Pro. Free for up to 5 machines.
+
+• Get security updates on a wide range of packages until 2034
+• Fulfill FedRAMP, FIPS, STIG and HIPAA and other compliance and hardening requirements with certified tooling and crypto-modules
+
+Learn more at &lt;a href="https://ubuntu.com/pro"&gt;ubuntu.com/pro&lt;/a&gt;.</property>
+                <property name="use-markup">True</property>
+                <property name="wrap">True</property>
+                <property name="max-width-chars">130</property>
+              </object>
+            </child>
+          </object>
+        </child>
+        <child>
+          <object class="GtkLabel">
+            <property name="visible">True</property>
+            <property name="can-focus">False</property>
+            <property name="margin-top">40</property>
+            <property name="margin-start">30</property>
+            <property name="margin-bottom">6</property>
+            <property name="label" translatable="yes">Enable Ubuntu Pro now, or skip this step.</property>
+            <property name="xalign">0</property>
+          </object>
+        </child>
+        <child>
+          <object class="GtkBox">
+            <property name="visible">True</property>
+            <property name="can-focus">False</property>
+            <property name="orientation">vertical</property>
+            <property name="margin-start">30</property>
+            <property name="spacing">6</property>
+            <child>
+              <object class="GtkBox">
+                <property name="visible">True</property>
+                <property name="can-focus">False</property>
+                <property name="orientation">horizontal</property>
+                <child>
+                  <object class="GtkCheckButton" id="enable_pro_select">
+                    <property name="label" translatable="yes">Enable Ubuntu Pro</property>
+                    <property name="visible">True</property>
+                    <property name="can-focus">True</property>
+                    <property name="receives-default">False</property>
+                    <property name="margin-top">6</property>
+                    <property name="group">skip_pro_select</property>
+                  </object>
+                </child>
+                <child>
+                  <object class="GtkImage" id="pro_status_image">
+                    <property name="margin-start">30</property>
+                    <property name="margin-end">6</property>
+                    <property name="margin-top">6</property>
+                    <property name="can-focus">False</property>
+                    <property name="visible">False</property>
+                    <property name="icon_size">normal</property>
+                  </object>
+                </child>
+                <child>
+                  <object class="GtkLabel" id="offline_warning">
+                    <property name="yalign">0.8</property>
+                    <property name="visible">False</property>
+                    <property name="can-focus">False</property>
+                    <property name="label" translatable="yes">An internet connection is required to enable Ubuntu Pro</property>
+                  </object>
+                </child>
+              </object>
+            </child>
+            <child>
+              <object class="GtkBox">
+                <property name="visible">True</property>
+                <property name="can-focus">False</property>
+                <property name="orientation">vertical</property>
+                <child>
+                  <object class="GtkCheckButton" id="skip_pro_select">
+                    <property name="label" translatable="yes">Skip for now</property>
+                    <property name="visible">True</property>
+                    <property name="can-focus">True</property>
+                    <property name="receives-default">False</property>
+                    <property name="margin-top">12</property>
+                    <property name="active">True</property>
+                  </object>
+                </child>
+                <child>
+                  <object class="GtkLabel">
+                    <property name="visible">True</property>
+                    <property name="can-focus">False</property>
+                    <property name="margin-start">25</property>
+                    <property name="label" translatable="yes">&lt;small&gt;You can always enable Ubuntu Pro later via the Software &amp;amp; Updates application&lt;/small&gt;</property>
+                    <property name="use-markup">True</property>
+                    <property name="xalign">0</property>
+                  </object>
+                </child>
+              </object>
+            </child>
+          </object>
+        </child>
+      </object>
+    </child>
+  </template>
+</interface>
diff --git a/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-page.c b/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-page.c
new file mode 100644
index 0000000..d191d0b
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-page.c
@@ -0,0 +1,820 @@
+/* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
+/*
+ * Copyright (C) 2022 Canonical Ltd.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, see <http://www.gnu.org/licenses/>.
+ */
+
+/* Canonical Ubuntu Pro page {{{1 */
+
+#define PAGE_ID "UbuntuPro"
+#define CHECK_ICON "/org/gnome/initial-setup/checkmark.svg"
+#define FAIL_ICON  "/org/gnome/initial-setup/fail.svg"
+#define LOGO       "/org/gnome/initial-setup/ubuntu-pro.svg"
+#define LOGO_DARK  "/org/gnome/initial-setup/ubuntu-pro-dark.svg"
+
+#include "config.h"
+#include "gis-ubuntupro-page.h"
+#include "ubuntupro-resources.h"
+#include "utils.h"
+
+#include <glib/gi18n.h>
+#include <gio/gio.h>
+#include <polkit/polkit.h>
+#include <json-glib/json-glib.h>
+#include <time.h>
+#include <pthread.h>
+
+/* For debugging faster, flip this to be able to skip to 3rd page
+ * without needing to attach to Ubuntu Pro first. */
+static gboolean SuccessfullyAttached = FALSE;
+
+typedef enum {
+  NONE = 0,
+  SUCCESS,
+  FAIL,
+  EXPIRED,
+} status_t;
+
+struct _GisUbuntuProPagePrivate {
+  GtkWidget *offer_page;
+  GtkWidget *attach_page;
+  GtkWidget *services_page;
+  GtkWidget *stack;
+
+  enum {
+      OFFER_PAGE,
+      ATTACH_PAGE,
+      SERVICES_PAGE,
+  } current_page;
+};
+typedef struct _GisUbuntuProPagePrivate GisUbuntuProPagePrivate;
+
+struct _GisUbuntuProOfferPagePrivate {
+  GtkWidget *ubuntu_pro_logo;
+  GtkWidget *enable_pro_select;
+  GtkWidget *skip_pro_select;
+  GtkWidget *offline_warning;
+  GtkWidget *pro_status_image;
+  gint      network_cb;
+};
+typedef struct _GisUbuntuProOfferPagePrivate GisUbuntuProOfferPagePrivate;
+
+struct _GisUbuntuProAttachPagePrivate {
+  GtkWidget *ubuntu_pro_logo;
+  GtkWidget *pin_label;
+  GtkWidget *token_field;
+  GtkWidget *token_status;
+  GtkWidget *token_spinner;
+  GtkWidget *pin_spinner;
+  GtkWidget *token_status_icon;
+  GtkWidget *pin_hint;
+  GtkWidget *pin_status;
+  GtkWidget *pin_status_icon;
+  GtkWidget *token_radio;
+  GtkWidget *magic_radio;
+  /* This being here is a hack that makes changing the 2nd page's button
+   * from Skip to Next once the machine is attached possible. */
+  GisUbuntuProPage *main_page;
+
+  gboolean complete;
+  gboolean magic_token_polling;
+  gboolean attaching;
+  gint64 expired_by;
+  pthread_t poll_id;
+  enum active_radio_t {
+    MAGIC,
+    TOKEN,
+  } active_radio;
+  gchar *contract_token;
+  gchar *token;
+};
+typedef struct _GisUbuntuProAttachPagePrivate GisUbuntuProAttachPagePrivate;
+
+struct _GisUbuntuProServicesPagePrivate {
+  GtkWidget *enabled_services;
+  GtkWidget *enabled_services_header;
+  GtkWidget *available_services;
+  GtkWidget *available_services_header;
+  GtkWidget *contract_name;
+  GtkWidget *checkmark;
+};
+typedef struct _GisUbuntuProServicesPagePrivate GisUbuntuProServicesPagePrivate;
+
+struct _RestJSONResponse {
+    gint64 expiresIn;
+    gchar *token;
+    gchar *code;
+    gchar *contract_token;
+};
+
+typedef struct _RestJSONResponse RestJSONResponse;
+static void ua_attach(const gchar *, GisUbuntuProAttachPagePrivate *);
+static gboolean magic_parser(gchar*, RestJSONResponse*);
+static gboolean gis_ubuntupro_page_apply (GisPage*, GCancellable*);
+
+G_DEFINE_TYPE_WITH_PRIVATE (GisUbuntuProPage, gis_ubuntupro_page, GIS_TYPE_PAGE);
+G_DEFINE_TYPE_WITH_PRIVATE (GisUbuntuProOfferPage, gis_ubuntupro_offer_page, ADW_TYPE_BIN);
+G_DEFINE_TYPE_WITH_PRIVATE (GisUbuntuProAttachPage, gis_ubuntupro_attach_page, ADW_TYPE_BIN);
+G_DEFINE_TYPE_WITH_PRIVATE (GisUbuntuProServicesPage, gis_ubuntupro_services_page, ADW_TYPE_BIN);
+
+static void
+map_scalable_image(const gchar *path, GtkPicture *widget, int x, int y)
+{
+  g_autoptr(GError) error = NULL;
+  GdkPixbuf *pixbuf;
+  pixbuf = gdk_pixbuf_new_from_resource_at_scale (path, x, y, TRUE, &error);
+  if (error) {
+    g_warning("Unable to create pixbuf: %s\n", error->message);
+  }
+
+  if (pixbuf != NULL) {
+    gtk_picture_set_pixbuf(widget, pixbuf);
+  } else {
+    g_warning("Unable to load pixbuf: %s\n", error->message);
+  }
+}
+
+/* The user may go back any number of pages during attachment, so we can't
+ * blindly skip to the services list page.
+ * Furthermore, after attachment the user can again navigate back to any page
+ * and then hit the attach page again.
+ */
+static void
+consider_going_to_next_page(GisUbuntuProAttachPagePrivate *priv)
+{
+  static gboolean never_called = TRUE;
+  GisUbuntuProPage *page = GIS_UBUNTUPRO_PAGE(priv->main_page);
+  GisUbuntuProPagePrivate *main_priv = gis_ubuntupro_page_get_instance_private (page);
+
+  if (never_called && main_priv->current_page == ATTACH_PAGE) {
+    gis_page_set_complete(GIS_PAGE(priv->main_page), TRUE);
+    gis_ubuntupro_page_apply(GIS_PAGE(priv->main_page), NULL);
+  }
+  never_called = FALSE;
+}
+
+static void
+update_gui(GisUbuntuProAttachPagePrivate *priv, status_t status)
+{
+  GtkWidget *label, *icon, *spinner;
+  gchar *hint = _("Enter this code on <a href=\"https://ubuntu.com/pro/attach\">ubuntu.com/pro/attach</a>");
+  gboolean ready_to_attach;
+
+  if (priv->active_radio == MAGIC) {
+    icon = priv->pin_status_icon;
+    label = priv->pin_status;
+    spinner = priv->pin_spinner;
+    ready_to_attach = SuccessfullyAttached ||
+        (priv->contract_token && !priv->attaching);
+  } else {
+    icon = priv->token_status_icon;
+    label = priv->token_status;
+    spinner = priv->token_spinner;
+    ready_to_attach = SuccessfullyAttached || (!priv->attaching &&
+        gtk_entry_get_text_length(GTK_ENTRY(priv->token_field)) > 0);
+  }
+  gis_page_set_complete(GIS_PAGE(priv->main_page), ready_to_attach);
+
+  if (priv->attaching) {
+    gtk_spinner_start (GTK_SPINNER (spinner));
+  } else {
+    gtk_spinner_stop (GTK_SPINNER (spinner));
+  }
+
+  gtk_widget_set_sensitive (priv->token_radio, !priv->attaching);
+  gtk_widget_set_sensitive (priv->magic_radio, !priv->attaching);
+  gtk_widget_set_sensitive (priv->token_field, !priv->attaching &&
+                            priv->active_radio == TOKEN);
+  /* I don't know why this is needed, but otherwise even though the entry is
+   * sensitive, the blinking cursor doesn't appear and one cannot type in it */
+  if (gtk_widget_is_sensitive(priv->token_field))
+    gtk_entry_grab_focus_without_selecting (GTK_ENTRY (priv->token_field));
+
+  if (SuccessfullyAttached) {
+    consider_going_to_next_page(priv);
+    status = SUCCESS;
+  }
+  switch (status) {
+  case SUCCESS:
+    gtk_label_set_markup(GTK_LABEL(label), g_strconcat(
+        "<span foreground=\"green\"><b>", _("Valid token"), "</b></span>", NULL
+    ));
+    gtk_image_set_from_resource(GTK_IMAGE(icon), CHECK_ICON);
+    gtk_widget_set_sensitive(GTK_WIDGET(priv->token_field), FALSE);
+    gtk_widget_set_sensitive(GTK_WIDGET(priv->magic_radio), FALSE);
+    gtk_widget_set_sensitive(GTK_WIDGET(priv->token_radio), FALSE);
+    break;
+  case FAIL:
+    gtk_label_set_markup(GTK_LABEL(label), g_strconcat(
+        "<span foreground=\"red\"><b>", _("Invalid token"), "</b></span>", NULL
+    ));
+    gtk_image_set_from_resource(GTK_IMAGE(icon), FAIL_ICON);
+    break;
+  case EXPIRED:
+    hint = "Click the button to generate a new code.";
+    gtk_label_set_markup(GTK_LABEL(label), _("Code expired"));
+    gtk_image_set_from_resource(GTK_IMAGE(icon), FAIL_ICON);
+    break;
+  default:
+    break;
+  }
+  gtk_label_set_markup(GTK_LABEL(priv->pin_hint), hint);
+  gtk_widget_set_visible(GTK_WIDGET(priv->token_status_icon), FALSE);
+  gtk_widget_set_visible(GTK_WIDGET(priv->token_status), FALSE);
+  gtk_widget_set_visible(GTK_WIDGET(priv->pin_status_icon), FALSE);
+  gtk_widget_set_visible(GTK_WIDGET(priv->pin_status), FALSE);
+  gtk_widget_set_visible(GTK_WIDGET(icon), status);
+  gtk_widget_set_visible(GTK_WIDGET(label), status);
+}
+
+static void
+network_status_changed (GNetworkMonitor *monitor,
+                        gboolean         available,
+                        gpointer         user_data)
+{
+  GisUbuntuProOfferPagePrivate *priv = user_data;
+
+  if (!available) {
+    gtk_widget_set_sensitive (priv->enable_pro_select, FALSE);
+    gtk_widget_show (GTK_WIDGET (priv->offline_warning));
+    gtk_widget_show (GTK_WIDGET (priv->pro_status_image));
+    gtk_check_button_set_active (GTK_CHECK_BUTTON (priv->skip_pro_select), TRUE);
+    gtk_image_set_from_icon_name (GTK_IMAGE(priv->pro_status_image), "dialog-warning");
+  }
+  else {
+    gtk_widget_set_sensitive (priv->enable_pro_select, TRUE);
+    gtk_widget_hide (GTK_WIDGET (priv->offline_warning));
+    gtk_widget_hide (GTK_WIDGET (priv->pro_status_image));
+  }
+}
+
+static void
+gis_ubuntupro_offer_page_dispose (GObject *object)
+{
+  GisUbuntuProOfferPage *offer_page = GIS_UBUNTUPRO_OFFER_PAGE (object);
+  GisUbuntuProOfferPagePrivate *offer_priv = gis_ubuntupro_offer_page_get_instance_private (offer_page);
+
+  GNetworkMonitor *network_monitor = g_network_monitor_get_default ();
+  g_signal_handler_disconnect(network_monitor, offer_priv->network_cb);
+
+  G_OBJECT_CLASS (gis_ubuntupro_offer_page_parent_class)->dispose (object);
+}
+
+static void
+gis_ubuntupro_page_dispose (GObject *object)
+{
+  G_OBJECT_CLASS (gis_ubuntupro_page_parent_class)->dispose (object);
+}
+
+static void
+gis_ubuntupro_page_constructed (GObject *object)
+{
+  GisUbuntuProPage *page = GIS_UBUNTUPRO_PAGE (object);
+  GisUbuntuProPagePrivate *priv = gis_ubuntupro_page_get_instance_private (page);
+  GisUbuntuProOfferPage *offer_page = GIS_UBUNTUPRO_OFFER_PAGE (priv->offer_page);
+  GisUbuntuProOfferPagePrivate *offer_priv = gis_ubuntupro_offer_page_get_instance_private (offer_page);
+  GisUbuntuProAttachPage *attach_page = GIS_UBUNTUPRO_ATTACH_PAGE (priv->attach_page);
+  GisUbuntuProAttachPagePrivate *attach_priv = gis_ubuntupro_attach_page_get_instance_private (attach_page);
+  GisUbuntuProServicesPage *services_page = GIS_UBUNTUPRO_SERVICES_PAGE(priv->services_page);
+  GisUbuntuProServicesPagePrivate *services_priv = gis_ubuntupro_services_page_get_instance_private (services_page);
+
+  gchar *logo = is_dark_theme(GTK_WIDGET(page)) ? LOGO_DARK: LOGO;
+  map_scalable_image(logo, GTK_PICTURE(attach_priv->ubuntu_pro_logo), -1, 66);
+  map_scalable_image(logo, GTK_PICTURE(offer_priv->ubuntu_pro_logo), -1, 66);
+  map_scalable_image(CHECK_ICON, GTK_PICTURE(services_priv->checkmark), 30, -1);
+  // Needed so the picture is shown inside the GtkFixed (god knows why!)
+  gtk_widget_set_size_request(services_priv->checkmark, 30, 30);
+
+  G_OBJECT_CLASS (gis_ubuntupro_page_parent_class)->constructed (object);
+
+  GNetworkMonitor *network_monitor = g_network_monitor_get_default ();
+  offer_priv->network_cb = g_signal_connect (network_monitor, "network-changed",
+                    G_CALLBACK (network_status_changed), offer_priv);
+
+  if (!g_network_monitor_get_network_available (network_monitor)) {
+    gtk_widget_set_sensitive (offer_priv->enable_pro_select, FALSE);
+    gtk_widget_show (GTK_WIDGET (offer_priv->offline_warning));
+    gtk_widget_show (GTK_WIDGET (offer_priv->pro_status_image));
+  }
+
+  /* Initializate priv values */
+  attach_priv->magic_token_polling = FALSE;
+  attach_priv->active_radio = MAGIC;
+  attach_priv->expired_by = 0;
+  attach_priv->contract_token = NULL;
+  attach_priv->main_page = page;
+  priv->current_page = OFFER_PAGE;
+
+  gis_page_set_skippable (GIS_PAGE (page), FALSE);
+  gis_page_set_complete (GIS_PAGE (page), TRUE);
+  gtk_widget_show (GTK_WIDGET (page));
+}
+
+static void
+gis_ubuntupro_page_locale_changed (GisPage *page)
+{
+  gis_page_set_title (GIS_PAGE (page), _("Ubuntu Pro"));
+}
+
+static gboolean
+poll_token_attach (GisUbuntuProAttachPagePrivate *priv)
+{
+  gchar *std_out, *std_err, *cmd;
+  RestJSONResponse resp; /* relevant response fields */
+  g_autoptr(GError) error = NULL;
+
+  cmd = g_strconcat("/bin/ua api u.pro.attach.magic.wait.v1 --args magic_token=", priv->token, NULL);
+  if (!g_spawn_command_line_sync(cmd, &std_out, &std_err, NULL, &error)) {
+    g_warning ("Failed to request magic token: %s", error->message);
+  }
+  else if (!magic_parser(std_out, &resp)) {
+    g_warning("Couldn't parse response.");
+  }
+  else if (resp.contract_token != NULL) {
+    priv->contract_token = g_strdup(resp.contract_token);
+    return TRUE;
+  }
+  return FALSE;
+}
+
+static void*
+poll_magic_token (void *data)
+{
+  GisUbuntuProAttachPagePrivate *priv = gis_ubuntupro_attach_page_get_instance_private (data);
+  status_t status;
+
+  if (priv->active_radio != MAGIC) {
+    pthread_exit(NULL);
+  }
+  priv->magic_token_polling = TRUE;
+  
+  if (time(0) > priv->expired_by) {
+    status = EXPIRED;
+    update_gui(priv, status);
+    priv->magic_token_polling = FALSE;
+  }
+  gboolean token_received = poll_token_attach(priv);
+  if (token_received) {
+    priv->magic_token_polling = FALSE;
+    status = SUCCESS;
+    update_gui(priv, status);
+  }
+  pthread_exit(NULL);
+}
+
+static gboolean
+magic_parser(gchar *ptr,              /* pointer to actual response */
+              RestJSONResponse *resp) /* relevant response fields */
+{
+    g_autoptr(JsonParser) parser = json_parser_new();
+    JsonNode *root;
+    g_autoptr(GError) error = NULL;
+
+    json_parser_load_from_data(parser, ptr, -1, &error);
+    if (error) {
+        g_warning("Couldn't parse magic token JSON; %s\n", error->message);
+        g_print("%s\n", ptr);
+        return FALSE;
+    }
+    root = json_parser_get_root(parser);
+    if (!JSON_NODE_HOLDS_OBJECT(root)) {
+        g_warning("Invalid magic token JSON\n");
+        return FALSE;
+    }
+
+    JsonObject  *data, *attributes;
+    JsonObject *response = json_node_get_object(root);
+    data = json_object_get_object_member(response, "data");
+    attributes = json_object_get_object_member(data, "attributes");
+
+    resp->expiresIn = json_object_has_member(attributes, "expires_in") ?
+        json_object_get_int_member(attributes, "expires_in") :
+        0;
+    resp->token = json_object_has_member(attributes, "token") ?
+        g_strdup(json_object_get_string_member(attributes, "token")) :
+        NULL;
+    resp->code = json_object_has_member(attributes, "user_code") ?
+        g_strdup(json_object_get_string_member(attributes, "user_code")) :
+        NULL;
+    resp->contract_token = json_object_has_member(attributes, "contract_token") ?
+        g_strdup(json_object_get_string_member(attributes, "contract_token")) :
+        NULL;
+
+    return TRUE;
+}
+
+static void
+display_ua_services(GisUbuntuProServicesPagePrivate *priv)
+{
+    g_autoptr(JsonParser) parser = json_parser_new();
+    JsonNode    *root_node;
+    JsonObject  *root, *services, *contract;
+    JsonArray   *services_array;
+    g_autoptr(GError) error = NULL;
+    guint       i, n_services;
+    const char  *status, *description, *available, *contract_name;
+    gsize       len;
+    gchar *str;
+
+    if (!parse_ua_status(&str, &len)) {
+        return;
+    }
+    g_autofree gchar *available_str = (gchar *)g_malloc0(len);
+    g_autofree gchar *enabled_str = (gchar *)g_malloc0(len);
+
+    json_parser_load_from_data(parser, str, strlen(str), &error);
+    g_free(str);
+    if (error) {
+        g_warning("Couldn't parse magic token JSON; %s\n", error->message);
+    }
+    root_node = json_parser_get_root(parser);
+    if (!JSON_NODE_HOLDS_OBJECT(root_node)) {
+        g_warning("Invalid magic token JSON\n");
+    }
+
+    root = json_node_get_object(root_node);
+
+    contract = json_object_get_object_member(root, "contract");
+    contract_name = json_object_get_string_member(contract, "name");
+    gtk_label_set_text(GTK_LABEL(priv->contract_name), contract_name);
+
+    services_array = json_object_get_array_member(root, "services");
+    n_services = json_array_get_length(services_array);
+
+    /* Get services description, status and availability */
+    for (i = 0; i < n_services; i++) {
+        services = json_array_get_object_element(services_array, i);
+        if (
+            json_object_has_member(services, "description") &&
+            json_object_has_member(services, "status") &&
+            json_object_has_member(services, "available")
+        ) {
+            description = json_object_get_string_member(services, "description");
+            status = json_object_get_string_member(services, "status");
+            available = json_object_get_string_member(services, "available");
+            if (strcmp(status, "enabled") == 0) {
+              itemize(enabled_str, description, len);
+            } else if (strcmp(available, "yes") == 0) {
+              itemize(available_str, description, len);
+            }
+        }
+    }
+
+    /* Display enabled and disabled but available services */
+    if (enabled_str == NULL) {
+      g_object_unref(GTK_WIDGET(priv->enabled_services_header));
+    } else {
+      gtk_label_set_text(GTK_LABEL(priv->enabled_services), enabled_str);
+    }
+    if (available_str == NULL) {
+      g_object_unref(GTK_WIDGET(priv->available_services_header));
+    } else {
+      gtk_label_set_text(GTK_LABEL(priv->available_services), available_str);
+    }
+}
+
+static void
+request_magic_attach (GisUbuntuProAttachPage *page)
+{
+  GisUbuntuProAttachPagePrivate *priv = gis_ubuntupro_attach_page_get_instance_private (page);
+  gchar *std_out, *std_err;
+  g_autoptr(GError) error = NULL;
+  int rc;
+
+  if (priv->magic_token_polling) {
+    return;
+  }
+
+  if (!g_spawn_command_line_sync("/bin/ua api u.pro.attach.magic.initiate.v1",
+                                 &std_out, &std_err, NULL, &error)) {
+    g_warning ("Failed to request magic token: %s", error->message);
+    return;
+  }
+
+  RestJSONResponse resp;
+  if (!magic_parser(std_out, &resp)) {
+    g_print("%s\n",std_out);
+    g_warning("Couldn't parse response.\n");
+    return;
+  }
+  gtk_label_set_text (GTK_LABEL (priv->pin_label), resp.code);
+  priv->expired_by = resp.expiresIn + time(0);
+  priv->token = g_strdup(resp.token);
+  priv->magic_token_polling = TRUE;
+  rc = pthread_create(&priv->poll_id, NULL, poll_magic_token, (void *)page);
+  if (rc) {
+    g_warning ("Couldn't create PIN polling thread");
+    return;
+  }
+  update_gui(priv, 0);
+  g_free(resp.token);
+  g_free(resp.code);
+}
+
+static void
+on_ua_attach_requested (GObject *source,
+                        GAsyncResult *result,
+                        gpointer user_data)
+{
+  GisUbuntuProAttachPagePrivate *priv = user_data;
+  g_autoptr(GError) error = NULL;
+  g_autoptr(GVariant) retval = g_dbus_connection_call_finish (G_DBUS_CONNECTION (source), result, &error);
+  status_t status;
+
+  if (retval == NULL) {
+    g_warning ("Failed to attach token: %s", error->message);
+    status = FAIL;
+  } else {
+    SuccessfullyAttached = TRUE;
+    status = SUCCESS;
+    pthread_cancel(priv->poll_id);
+    gis_page_set_complete (GIS_PAGE(priv->main_page), TRUE);
+    g_free(priv->contract_token);
+    g_free(priv->token);
+  }
+  priv->attaching = FALSE;
+  update_gui(priv, status);
+}
+
+static void
+ua_attach(const gchar *token, GisUbuntuProAttachPagePrivate *priv)
+{
+  GDBusConnection *bus;
+  g_autoptr(GError) error = NULL;
+  status_t        status = NONE;
+
+  if (priv->attaching) {
+    return;
+  }
+
+  bus = g_bus_get_sync(G_BUS_TYPE_SYSTEM, NULL, &error);
+  if (bus == NULL) {
+      g_warning("Failed to get system bus: %s", error->message);
+  } else {
+    priv->attaching = TRUE;
+    update_gui(priv, status);
+
+    g_dbus_connection_call(bus,
+      "com.canonical.UbuntuAdvantage",
+      "/com/canonical/UbuntuAdvantage/Manager",
+      "com.canonical.UbuntuAdvantage.Manager",
+      "Attach",
+      g_variant_new("(s)", token),
+      G_VARIANT_TYPE("()"),
+      G_DBUS_CALL_FLAGS_NONE,
+      543210, /* I have observed that -1, the default timeout, is not enough. */
+      NULL,
+      on_ua_attach_requested,
+      priv);
+  }
+}
+
+void
+on_token_typing (GtkButton *button, GisUbuntuProAttachPage *page)
+{
+  GisUbuntuProAttachPagePrivate *priv = gis_ubuntupro_attach_page_get_instance_private (page);
+
+  gis_page_set_complete (
+      GIS_PAGE(priv->main_page),
+      gtk_entry_get_text_length(GTK_ENTRY(priv->token_field)) > 0
+  );
+}
+
+void
+request_token_attach (GtkButton *button, GisUbuntuProAttachPage *page)
+{
+  GisUbuntuProAttachPagePrivate *priv = gis_ubuntupro_attach_page_get_instance_private (page);
+
+  const gchar *token = gtk_editable_get_text(GTK_EDITABLE(priv->token_field));
+  ua_attach(token, priv);
+}
+
+void
+on_magic_clicked (GtkButton *button, GisUbuntuProAttachPage *page)
+{
+  GisUbuntuProAttachPagePrivate *priv = gis_ubuntupro_attach_page_get_instance_private (page);
+  priv->active_radio = MAGIC;
+
+  request_magic_attach(page);
+}
+
+void
+on_radio_toggled (GtkButton *button, GisUbuntuProAttachPage *page)
+{
+  GisUbuntuProAttachPagePrivate *priv = gis_ubuntupro_attach_page_get_instance_private (page);
+  status_t status = NONE;
+
+  priv->active_radio = gtk_check_button_get_active(GTK_CHECK_BUTTON(priv->token_radio)) ? TOKEN : MAGIC;
+  update_gui(priv, status);
+}
+
+/* Callback for the Previous button */
+static gboolean
+gis_ubuntupro_page_go_back (GisPage *gis_page)
+{
+  GisUbuntuProPage *page = GIS_UBUNTUPRO_PAGE (gis_page);
+  GisUbuntuProPagePrivate *priv = gis_ubuntupro_page_get_instance_private (page);
+  GisUbuntuProOfferPage *offer_page = GIS_UBUNTUPRO_OFFER_PAGE (priv->offer_page);
+  GisUbuntuProAttachPage *attach_page = GIS_UBUNTUPRO_ATTACH_PAGE (priv->attach_page);
+
+  switch (priv->current_page) {
+  case OFFER_PAGE:
+    return FALSE;
+  case ATTACH_PAGE:
+    gis_page_set_complete (gis_page, TRUE);
+    gtk_stack_set_visible_child (GTK_STACK (priv->stack), GTK_WIDGET(offer_page));
+    priv->current_page = OFFER_PAGE;
+    break;
+  case SERVICES_PAGE:
+    gtk_stack_set_visible_child (GTK_STACK (priv->stack), GTK_WIDGET(attach_page));
+    priv->current_page = ATTACH_PAGE;
+    break;
+  }
+  return TRUE;
+}
+
+/* Callback for the Next button */
+static gboolean
+gis_ubuntupro_page_apply (GisPage      *gis_page,
+                          GCancellable *cancellable)
+{
+  GisUbuntuProPage *page = GIS_UBUNTUPRO_PAGE (gis_page);
+  GisUbuntuProPagePrivate *priv = gis_ubuntupro_page_get_instance_private (page);
+  GisUbuntuProOfferPage *offer_page = GIS_UBUNTUPRO_OFFER_PAGE (priv->offer_page);
+  GisUbuntuProOfferPagePrivate *offer_priv = gis_ubuntupro_offer_page_get_instance_private (offer_page);
+  GisUbuntuProAttachPage *attach_page = GIS_UBUNTUPRO_ATTACH_PAGE (priv->attach_page);
+  GisUbuntuProAttachPagePrivate *attach_priv = gis_ubuntupro_attach_page_get_instance_private (attach_page);
+  switch (priv->current_page) {
+  case OFFER_PAGE:
+    if (gtk_check_button_get_active(GTK_CHECK_BUTTON (offer_priv->skip_pro_select))) {
+      return FALSE;
+    }
+    /* Request magic token already if didn't yet and advance to next local page */
+    if (!SuccessfullyAttached && !attach_priv->attaching) {
+      request_magic_attach(attach_page);
+    }
+    gis_page_apply_complete (GIS_PAGE (page), FALSE);
+    update_gui(attach_priv, 0);
+    gtk_stack_set_visible_child (GTK_STACK (priv->stack), GTK_WIDGET(attach_page));
+    priv->current_page = ATTACH_PAGE;
+    break;
+  case ATTACH_PAGE:
+    if (SuccessfullyAttached) {
+      GisUbuntuProServicesPage *services_page = GIS_UBUNTUPRO_SERVICES_PAGE(priv->services_page);
+      display_ua_services(gis_ubuntupro_services_page_get_instance_private (services_page));
+      gtk_stack_set_visible_child (GTK_STACK (priv->stack), priv->services_page);
+      gis_page_apply_complete (GIS_PAGE (page), FALSE);
+    } else {
+      if (attach_priv->active_radio == MAGIC) {
+        ua_attach(attach_priv->contract_token, attach_priv);
+      } else {
+        request_token_attach(NULL, attach_page);
+      }
+      gis_page_apply_complete (GIS_PAGE (page), FALSE);
+      return FALSE;
+    }
+    priv->current_page = SERVICES_PAGE;
+    break;
+  case SERVICES_PAGE:
+    return FALSE;
+  }
+  return TRUE;
+}
+
+static void
+gis_ubuntupro_page_class_init (GisUbuntuProPageClass *klass)
+{
+  GisPageClass *page_class = GIS_PAGE_CLASS (klass);
+  GObjectClass *object_class = G_OBJECT_CLASS (klass);
+
+  gtk_widget_class_set_template_from_resource (GTK_WIDGET_CLASS (klass), "/org/gnome/initial-setup/gis-ubuntupro-page.ui");
+
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProPage, offer_page);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProPage, attach_page);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProPage, services_page);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProPage, stack);
+  gtk_widget_class_bind_template_callback (GTK_WIDGET_CLASS (klass), request_token_attach);
+  gtk_widget_class_bind_template_callback (GTK_WIDGET_CLASS (klass), request_magic_attach);
+  gtk_widget_class_bind_template_callback (GTK_WIDGET_CLASS (klass), on_radio_toggled);
+  gtk_widget_class_bind_template_callback (GTK_WIDGET_CLASS (klass), on_magic_clicked);
+
+  page_class->page_id = PAGE_ID;
+  page_class->locale_changed = gis_ubuntupro_page_locale_changed;
+  page_class->apply = gis_ubuntupro_page_apply;
+  page_class->go_back = gis_ubuntupro_page_go_back;
+  object_class->constructed = gis_ubuntupro_page_constructed;
+  object_class->dispose = gis_ubuntupro_page_dispose;
+}
+static void
+gis_ubuntupro_offer_page_class_init (GisUbuntuProOfferPageClass *klass)
+{
+  GObjectClass *object_class = G_OBJECT_CLASS (klass);
+
+  gtk_widget_class_set_template_from_resource (GTK_WIDGET_CLASS (klass), "/org/gnome/initial-setup/gis-ubuntupro-offer-page.ui");
+
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProOfferPage, ubuntu_pro_logo);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProOfferPage, enable_pro_select);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProOfferPage, skip_pro_select);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProOfferPage, offline_warning);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProOfferPage, pro_status_image);
+
+  object_class->dispose = gis_ubuntupro_offer_page_dispose;
+}
+
+static void
+gis_ubuntupro_attach_page_class_init (GisUbuntuProAttachPageClass *klass)
+{
+  gtk_widget_class_set_template_from_resource (GTK_WIDGET_CLASS (klass), "/org/gnome/initial-setup/gis-ubuntupro-attach-page.ui");
+
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProAttachPage, ubuntu_pro_logo);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProAttachPage, pin_label);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProAttachPage, token_field);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProAttachPage, token_status);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProAttachPage, token_spinner);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProAttachPage, token_status_icon);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProAttachPage, pin_status);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProAttachPage, pin_spinner);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProAttachPage, pin_status_icon);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProAttachPage, pin_hint);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProAttachPage, token_radio);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProAttachPage, magic_radio);
+}
+static void
+gis_ubuntupro_services_page_class_init (GisUbuntuProServicesPageClass *klass)
+{
+  gtk_widget_class_set_template_from_resource (GTK_WIDGET_CLASS (klass), "/org/gnome/initial-setup/gis-ubuntupro-services-page.ui");
+
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProServicesPage, enabled_services);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProServicesPage, enabled_services_header);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProServicesPage, available_services);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProServicesPage, available_services_header);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProServicesPage, contract_name);
+  gtk_widget_class_bind_template_child_private (GTK_WIDGET_CLASS (klass), GisUbuntuProServicesPage, checkmark);
+}
+
+static void
+gis_ubuntupro_page_init (GisUbuntuProPage *page)
+{
+  g_resources_register (ubuntupro_get_resource ());
+
+  /* Magic that makes stuff compile */
+  gis_ubuntupro_offer_page_get_type ();
+  gis_ubuntupro_attach_page_get_type ();
+  gis_ubuntupro_services_page_get_type ();
+
+  gtk_widget_init_template (GTK_WIDGET (page));
+}
+static void
+gis_ubuntupro_offer_page_init (GisUbuntuProOfferPage *page)
+{
+  g_resources_register (ubuntupro_get_resource ());
+
+  gtk_widget_init_template (GTK_WIDGET (page));
+}
+static void
+gis_ubuntupro_attach_page_init (GisUbuntuProAttachPage *page)
+{
+  g_resources_register (ubuntupro_get_resource ());
+
+  gtk_widget_init_template (GTK_WIDGET (page));
+}
+static void
+gis_ubuntupro_services_page_init (GisUbuntuProServicesPage *page)
+{
+  g_resources_register (ubuntupro_get_resource ());
+
+  gtk_widget_init_template (GTK_WIDGET (page));
+}
+
+GisPage *
+gis_prepare_ubuntu_pro_page (GisDriver *driver)
+{
+  gboolean attached;
+  if (!get_ubuntu_advantage_attached (&attached)) {
+      g_warning("Couldn't fetch the Ubuntu Pro status.\n");
+      return NULL;
+  }
+  if (attached) {
+      g_warning("Ubuntu Pro is already attached. Skipping Ubuntu Pro pages.\n");
+      return NULL;
+  }
+
+  if (!is_ubuntupro_supported ())
+    return NULL;
+
+  return g_object_new (GIS_TYPE_UBUNTUPRO_PAGE,
+                       "driver", driver,
+                       NULL);
+}
diff --git a/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-page.h b/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-page.h
new file mode 100644
index 0000000..f90d0c2
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-page.h
@@ -0,0 +1,110 @@
+/* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
+/*
+ * Copyright (C) 2018 Canonical Ltd.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef __GIS_UBUNTUPRO_PAGE_H__
+#define __GIS_UBUNTUPRO_PAGE_H__
+
+#include "gnome-initial-setup.h"
+
+G_BEGIN_DECLS
+
+#define GIS_TYPE_UBUNTUPRO_PAGE            (gis_ubuntupro_page_get_type ())
+#define GIS_TYPE_UBUNTUPRO_OFFER_PAGE           (gis_ubuntupro_offer_page_get_type ())
+#define GIS_TYPE_UBUNTUPRO_ATTACH_PAGE           (gis_ubuntupro_attach_page_get_type ())
+#define GIS_TYPE_UBUNTUPRO_SERVICES_PAGE           (gis_ubuntupro_services_page_get_type ())
+
+#define GIS_UBUNTUPRO_PAGE(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), GIS_TYPE_UBUNTUPRO_PAGE, GisUbuntuProPage))
+#define GIS_UBUNTUPRO_PAGE_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass),  GIS_TYPE_UBUNTUPRO_PAGE, GisUbuntuProPageClass))
+#define GIS_UBUNTUPRO_OFFER_PAGE(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), GIS_TYPE_UBUNTUPRO_OFFER_PAGE, GisUbuntuProOfferPage))
+#define GIS_UBUNTUPRO_OFFER_PAGE_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass),  GIS_TYPE_UBUNTUPRO_OFFER_PAGE, GisUbuntuProOfferPageClass))
+#define GIS_UBUNTUPRO_ATTACH_PAGE(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), GIS_TYPE_UBUNTUPRO_ATTACH_PAGE, GisUbuntuProAttachPage))
+#define GIS_UBUNTUPRO_ATTACH_PAGE_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass),  GIS_TYPE_UBUNTUPRO_ATTACH_PAGE, GisUbuntuProAttachPageClass))
+#define GIS_UBUNTUPRO_SERVICES_PAGE(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), GIS_TYPE_UBUNTUPRO_SERVICES_PAGE, GisUbuntuProServicesPage))
+#define GIS_UBUNTUPRO_SERVICES_PAGE_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass),  GIS_TYPE_UBUNTUPRO_SERVICES_PAGE, GisUbuntuProServicesPageClass))
+
+#define GIS_IS_UBUNTUPRO_PAGE(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GIS_TYPE_UBUNTUPRO_PAGE))
+#define GIS_IS_UBUNTUPRO_PAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass),  GIS_TYPE_UBUNTUPRO_PAGE))
+#define GIS_IS_UBUNTUPRO_OFFER_PAGE(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GIS_TYPE_UBUNTUPRO_OFFER_PAGE))
+#define GIS_IS_UBUNTUPRO_OFFER_PAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass),  GIS_TYPE_UBUNTUPRO_OFFER_PAGE))
+#define GIS_IS_UBUNTUPRO_ATTACH_PAGE(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GIS_TYPE_UBUNTUPRO_ATTACH_PAGE))
+#define GIS_IS_UBUNTUPRO_ATTACH_PAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass),  GIS_TYPE_UBUNTUPRO_ATTACH_PAGE))
+#define GIS_IS_UBUNTUPRO_SERVICES_PAGE(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GIS_TYPE_UBUNTUPRO_SERVICES_PAGE))
+#define GIS_IS_UBUNTUPRO_SERVICES_PAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass),  GIS_TYPE_UBUNTUPRO_SERVICES_PAGE))
+
+#define GIS_UBUNTUPRO_PAGE_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj),  GIS_TYPE_UBUNTUPRO_PAGE, GisUbuntuProPageClass))
+#define GIS_UBUNTUPRO_OFFER_PAGE_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj),  GIS_TYPE_UBUNTUPRO_OFFER_PAGE, GisUbuntuProOfferPageClass))
+#define GIS_UBUNTUPRO_ATTACH_PAGE_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj),  GIS_TYPE_UBUNTUPRO_ATTACH_PAGE, GisUbuntuProAttachPageClass))
+#define GIS_UBUNTUPRO_SERVICES_PAGE_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj),  GIS_TYPE_UBUNTUPRO_SERVICES_PAGE, GisUbuntuProServicesPageClass))
+
+typedef struct _GisUbuntuProPage        GisUbuntuProPage;
+typedef struct _GisUbuntuProPageClass   GisUbuntuProPageClass;
+typedef struct _GisUbuntuProOfferPage       GisUbuntuProOfferPage;
+typedef struct _GisUbuntuProOfferPageClass  GisUbuntuProOfferPageClass;
+typedef struct _GisUbuntuProAttachPage       GisUbuntuProAttachPage;
+typedef struct _GisUbuntuProAttachPageClass  GisUbuntuProAttachPageClass;
+typedef struct _GisUbuntuProServicesPage       GisUbuntuProServicesPage;
+typedef struct _GisUbuntuProServicesPageClass  GisUbuntuProServicesPageClass;
+
+struct _GisUbuntuProPage
+{
+  GisPage parent;
+};
+struct _GisUbuntuProPageClass
+{
+  GisPageClass parent_class;
+};
+
+struct _GisUbuntuProOfferPage
+{
+  AdwBin parent;
+};
+struct _GisUbuntuProOfferPageClass
+{
+  AdwBinClass parent_class;
+};
+
+struct _GisUbuntuProAttachPage
+{
+  AdwBin parent;
+};
+struct _GisUbuntuProAttachPageClass
+{
+  AdwBinClass parent_class;
+};
+
+struct _GisUbuntuProServicesPage
+{
+  AdwBin parent;
+};
+
+struct _GisUbuntuProServicesPageClass
+{
+  AdwBinClass parent_class;
+};
+
+GType gis_ubuntupro_page_get_type (void);
+GType gis_ubuntupro_offer_page_get_type (void);
+GType gis_ubuntupro_attach_page_get_type (void);
+GType gis_ubuntupro_services_page_get_type (void);
+
+GisPage *gis_prepare_ubuntu_pro_page (GisDriver *driver);
+
+
+G_END_DECLS
+
+#endif /* __GIS_UBUNTUPRO_PAGE_H__ */
diff --git a/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-page.ui b/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-page.ui
new file mode 100644
index 0000000..d95fc1c
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-page.ui
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<interface>
+  <requires lib="gtk" version="4.0"/>
+  <template class="GisUbuntuProPage" parent="GisPage">
+    <child>
+  <object class="GtkBox" id="stepUbuntuPro">
+    <property name="visible">True</property>
+    <property name="can-focus">False</property>
+        <child>
+          <object class="GtkStack" id="stack">
+            <property name="visible">True</property>
+            <property name="valign">start</property>
+            <property name="vexpand">True</property>
+            <child>
+              <object class="GisUbuntuProOfferPage" id="offer_page">
+                <property name="visible">True</property>
+              </object>
+            </child>
+            <child>
+              <object class="GisUbuntuProAttachPage" id="attach_page">
+                <property name="visible">True</property>
+              </object>
+            </child>
+            <child>
+              <object class="GisUbuntuProServicesPage" id="services_page">
+                <property name="visible">True</property>
+              </object>
+            </child>
+          </object>
+        </child>
+      </object>
+    </child>
+  </template>
+</interface>
diff --git a/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-services-page.ui b/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-services-page.ui
new file mode 100644
index 0000000..1b1ad66
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/gis-ubuntupro-services-page.ui
@@ -0,0 +1,137 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<interface>
+  <requires lib="gtk" version="4.0"/>
+  <template class="GisUbuntuProServicesPage" parent="AdwBin">
+  <child>
+  <object class="GtkBox" id="services_page">
+    <property name="margin-start">12</property>
+    <property name="margin-top">12</property>
+    <property name="margin-end">12</property>
+    <property name="visible">True</property>
+    <property name="can-focus">False</property>
+    <property name="orientation">vertical</property>
+    <child>
+      <object class="GtkLabel">
+        <property name="visible">True</property>
+        <property name="can-focus">False</property>
+        <property name="halign">start</property>
+        <property name="margin-top">3</property>
+        <property name="margin-bottom">0</property>
+        <property name="label" translatable="yes">&lt;b&gt;Ubuntu Pro Services&lt;/b&gt;</property>
+        <property name="use-markup">True</property>
+        <property name="wrap">True</property>
+        <property name="xalign">0</property>
+        <attributes>
+          <attribute name="scale" value="1.4"/>
+        </attributes>
+      </object>
+    </child>
+    <child>
+      <object class="GtkSeparator">
+        <property name="visible">True</property>
+        <property name="can-focus">False</property>
+        <property name="margin-top">10</property>
+        <property name="margin-bottom">10</property>
+      </object>
+    </child>
+    <child>
+      <object class="GtkBox">
+        <property name="visible">True</property>
+        <property name="can-focus">False</property>
+        <child>
+          <object class="GtkFixed">
+          <property name="visible">True</property>
+          <property name="margin-end">10</property>
+          <child>
+            <object class="GtkPicture" id="checkmark">
+              <property name="visible">True</property>
+              <property name="content-fit">scale-down</property>
+              <property name="halign">start</property>
+              <property name="valign">start</property>
+            </object>
+          </child>
+          </object>
+        </child>
+        <child>
+        <object class="GtkBox">
+          <property name="vexpand">True</property>
+          <property name="hexpand">True</property>
+          <property name="vexpand-set">True</property>
+          <property name="hexpand-set">True</property>
+          <property name="halign">start</property>
+          <property name="valign">start</property>
+          <property name="visible">True</property>
+          <property name="can-focus">False</property>
+          <property name="orientation">vertical</property>
+        <child>
+          <object class="GtkLabel">
+            <property name="label" translatable="yes">Your subscription:</property>
+            <property name="margin-bottom">10</property>
+            <property name="visible">True</property>
+            <property name="halign">start</property>
+            <attributes>
+              <attribute name="scale" value="1.1"/>
+            </attributes>
+          </object>
+        </child>
+        <child>
+          <object class="GtkLabel" id="contract_name">
+            <property name="visible">True</property>
+            <property name="margin-bottom">24</property>
+            <property name="halign">start</property>
+          </object>
+        </child>
+        <child>
+          <object class="GtkLabel" id="enabled_services_header">
+            <property name="label" translatable="yes">Your enabled services:</property>
+            <property name="margin-bottom">10</property>
+            <property name="visible">True</property>
+            <property name="halign">start</property>
+            <attributes>
+              <attribute name="scale" value="1.1"/>
+            </attributes>
+          </object>
+        </child>
+        <child>
+          <object class="GtkLabel" id="enabled_services">
+            <property name="margin-start">3</property>
+            <property name="margin-bottom">10</property>
+            <property name="visible">True</property>
+            <property name="halign">start</property>
+          </object>
+        </child>
+        <child>
+          <object class="GtkLabel" id="available_services_header">
+            <property name="label" translatable="yes">Other available services:</property>
+            <property name="margin-bottom">10</property>
+            <property name="visible">True</property>
+            <property name="halign">start</property>
+            <attributes>
+              <attribute name="scale" value="1.1"/>
+            </attributes>
+          </object>
+        </child>
+        <child>
+          <object class="GtkLabel" id="available_services">
+            <property name="margin-start">3</property>
+            <property name="margin-bottom">10</property>
+            <property name="visible">True</property>
+            <property name="halign">start</property>
+          </object>
+        </child>
+        </object>
+        </child>
+        </object>
+        </child>
+        <child>
+          <object class="GtkLabel">
+            <property name="label" translatable="yes">You can change the default enablements for your token on the ubuntu.com/pro web interface. You can also change enabled services in the Settings menu or with the `pro` command-line.</property>
+            <property name="visible">True</property>
+            <property name="wrap">True</property>
+            <property name="halign">start</property>
+          </object>
+        </child>
+  </object>
+  </child>
+  </template>
+</interface>
diff --git a/gnome-initial-setup/pages/ubuntu-pro/meson.build b/gnome-initial-setup/pages/ubuntu-pro/meson.build
new file mode 100644
index 0000000..f7b700a
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/meson.build
@@ -0,0 +1,12 @@
+sources += gnome.compile_resources(
+    'ubuntupro-resources',
+    files('ubuntupro.gresource.xml'),
+    c_name: 'ubuntupro'
+)
+
+sources += files(
+    'gis-ubuntupro-page.c',
+    'gis-ubuntupro-page.h',
+    'utils.c',
+    'utils.h',
+)
diff --git a/gnome-initial-setup/pages/ubuntu-pro/ubuntu-pro-dark.svg b/gnome-initial-setup/pages/ubuntu-pro/ubuntu-pro-dark.svg
new file mode 100644
index 0000000..e33bf48
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/ubuntu-pro-dark.svg
@@ -0,0 +1,25 @@
+<svg width="132" height="34" viewBox="0 0 132 34" fill="none" xmlns="http://www.w3.org/2000/svg">
+<g clip-path="url(#clip0_1_7165)">
+<path d="M32.24 29.4699C30.94 29.4699 29.91 29.2199 29.14 28.7099C28.37 28.1999 27.81 27.5199 27.47 26.6599C27.13 25.7999 26.96 24.8499 26.96 23.7899V14.6799H28.38V23.5999C28.38 25.1899 28.74 26.3499 29.45 27.0899C30.16 27.8299 31.09 28.1999 32.25 28.1999C33.41 28.1999 34.34 27.8299 35.05 27.0899C35.76 26.3499 36.12 25.1899 36.12 23.5999V14.6799H37.54V23.7899C37.54 24.8499 37.37 25.8099 37.03 26.6599C36.69 27.5099 36.13 28.1999 35.36 28.7099C34.59 29.2199 33.55 29.4699 32.26 29.4699H32.24Z" fill="white"/>
+<path d="M44.96 29.41C44.33 29.41 43.77 29.3799 43.28 29.32C42.79 29.26 42.35 29.18 41.99 29.09C41.62 29 41.3 28.91 41.04 28.83V13.2L42.4 12.95V19.01C42.64 18.83 43.02 18.64 43.55 18.44C44.08 18.24 44.69 18.14 45.39 18.14C46.43 18.14 47.32 18.38 48.04 18.86C48.76 19.34 49.32 20.01 49.7 20.86C50.08 21.71 50.27 22.68 50.27 23.78C50.27 24.95 50.05 25.96 49.6 26.8C49.15 27.64 48.54 28.29 47.74 28.74C46.95 29.19 46.02 29.42 44.96 29.42V29.41ZM44.94 28.18C45.72 28.18 46.4 28.01 46.98 27.67C47.56 27.33 48.01 26.83 48.34 26.17C48.67 25.51 48.83 24.71 48.83 23.78C48.83 23.18 48.77 22.62 48.64 22.09C48.51 21.56 48.31 21.09 48.03 20.68C47.75 20.27 47.39 19.95 46.93 19.72C46.47 19.49 45.92 19.38 45.25 19.38C44.58 19.38 44.03 19.49 43.52 19.71C43 19.93 42.63 20.14 42.39 20.34V27.9C42.6 27.96 42.91 28.02 43.33 28.09C43.75 28.16 44.28 28.19 44.94 28.19V28.18Z" fill="white"/>
+<path d="M57.2402 29.3699C56.1702 29.3699 55.3202 29.1599 54.6902 28.7499C54.0602 28.3399 53.6202 27.7599 53.3502 27.0199C53.0902 26.2699 52.9502 25.4099 52.9502 24.4199V18.3599H54.3102V23.9799C54.3102 24.9999 54.4102 25.8099 54.6102 26.4099C54.8102 27.0199 55.1402 27.4499 55.6002 27.7299C56.0602 27.9999 56.6702 28.1399 57.4402 28.1399C58.0802 28.1399 58.6402 28.0999 59.1102 28.0399C59.5802 27.9799 59.8802 27.9099 60.0102 27.8499V18.3699H61.3702V28.7899C60.9702 28.8999 60.4202 29.0299 59.7402 29.1699C59.0602 29.3099 58.2202 29.3799 57.2302 29.3799L57.2402 29.3699Z" fill="white"/>
+<path d="M64.7598 29.1599V18.7399C65.1598 18.6299 65.7098 18.4999 66.3998 18.3599C67.0898 18.2199 67.9198 18.1499 68.8998 18.1499C69.9998 18.1499 70.8598 18.3599 71.4798 18.7799C72.0998 19.1999 72.5398 19.7799 72.7998 20.5199C73.0598 21.2699 73.1898 22.1299 73.1898 23.1199V29.1599H71.8298V23.5599C71.8298 22.5399 71.7398 21.7299 71.5498 21.1199C71.3598 20.5099 71.0398 20.0699 70.5798 19.7899C70.1198 19.5199 69.4898 19.3799 68.6998 19.3799C68.0598 19.3799 67.5098 19.4199 67.0398 19.4799C66.5698 19.5499 66.2698 19.6099 66.1298 19.6699V29.1499H64.7698L64.7598 29.1599Z" fill="white"/>
+<path d="M79.8899 29.3899C78.9999 29.3899 78.2999 29.2299 77.7799 28.9199C77.2599 28.6099 76.8999 28.1399 76.6899 27.5099C76.4799 26.8799 76.3799 26.0899 76.3799 25.1299V15.1899L77.7399 14.9399V18.3699H82.0399V19.5199H77.7399V25.2599C77.7399 26.0799 77.8299 26.6999 78.0099 27.1199C78.1899 27.5399 78.4499 27.8199 78.7899 27.9499C79.1299 28.0899 79.5199 28.1599 79.9699 28.1599C80.5399 28.1599 80.9999 28.0899 81.3499 27.9499C81.6999 27.8099 81.9699 27.6899 82.1599 27.5999L82.4899 28.7299C82.2899 28.8499 81.9499 28.9999 81.4699 29.1599C80.9799 29.3199 80.4499 29.3999 79.8799 29.3999L79.8899 29.3899Z" fill="white"/>
+<path d="M88.5898 29.3699C87.5198 29.3699 86.6698 29.1599 86.0398 28.7499C85.4098 28.3399 84.9698 27.7599 84.6998 27.0199C84.4398 26.2699 84.2998 25.4099 84.2998 24.4199V18.3599H85.6598V23.9799C85.6598 24.9999 85.7598 25.8099 85.9598 26.4099C86.1598 27.0199 86.4898 27.4499 86.9498 27.7299C87.4098 27.9999 88.0198 28.1399 88.7898 28.1399C89.4298 28.1399 89.9898 28.0999 90.4598 28.0399C90.9298 27.9799 91.2298 27.9099 91.3598 27.8499V18.3699H92.7198V28.7899C92.3198 28.8999 91.7698 29.0299 91.0898 29.1699C90.4098 29.3099 89.5698 29.3799 88.5798 29.3799L88.5898 29.3699Z" fill="white"/>
+<path d="M101.17 29.1601V14.9601C101.67 14.8201 102.26 14.7201 102.94 14.6601C103.61 14.6001 104.24 14.5701 104.83 14.5701C106.86 14.5701 108.38 14.9601 109.39 15.7501C110.4 16.5401 110.9 17.6401 110.9 19.0601C110.9 20.1601 110.65 21.0401 110.14 21.7001C109.63 22.3601 108.9 22.8401 107.96 23.1301C107.01 23.4201 105.88 23.5701 104.55 23.5701H102.59V29.1701H101.17V29.1601ZM102.59 22.3301H104.39C105.41 22.3301 106.29 22.2401 107.04 22.0701C107.79 21.9001 108.38 21.5701 108.79 21.0901C109.21 20.6101 109.42 19.9201 109.42 19.0301C109.42 18.1401 109.2 17.5201 108.76 17.0601C108.32 16.5901 107.76 16.2701 107.07 16.0801C106.38 15.8901 105.65 15.8001 104.89 15.8001C104.37 15.8001 103.93 15.8201 103.55 15.8501C103.17 15.8801 102.85 15.9201 102.59 15.9401V22.3301Z" fill="white"/>
+<path d="M113.34 29.1599V18.8599C113.69 18.7099 114.17 18.5499 114.78 18.3899C115.39 18.2299 116.14 18.1499 117.02 18.1499C117.31 18.1499 117.6 18.1699 117.89 18.1999C118.18 18.2399 118.43 18.2799 118.64 18.3199C118.85 18.3599 119.01 18.4099 119.11 18.4599L118.84 19.6299C118.74 19.5699 118.52 19.5099 118.17 19.4499C117.82 19.3899 117.37 19.3599 116.81 19.3599C116.23 19.3599 115.76 19.3999 115.4 19.4799C115.05 19.5599 114.81 19.6299 114.7 19.6899V29.1499H113.34V29.1599Z" fill="white"/>
+<path d="M125.12 29.4099C124.16 29.4099 123.31 29.1799 122.57 28.7099C121.83 28.2399 121.25 27.5899 120.83 26.7399C120.41 25.8899 120.19 24.8999 120.19 23.7699C120.19 22.6399 120.4 21.6399 120.83 20.7899C121.25 19.9499 121.84 19.2899 122.57 18.8199C123.3 18.3499 124.16 18.1099 125.12 18.1099C126.08 18.1099 126.93 18.3499 127.68 18.8199C128.42 19.2899 129.01 19.9499 129.42 20.7899C129.84 21.6299 130.05 22.6199 130.05 23.7699C130.05 24.9199 129.84 25.8899 129.42 26.7399C129 27.5899 128.42 28.2499 127.68 28.7099C126.93 29.1799 126.08 29.4099 125.12 29.4099ZM125.12 28.1799C125.83 28.1799 126.45 27.9999 126.97 27.6399C127.49 27.2799 127.9 26.7699 128.18 26.0999C128.47 25.4399 128.61 24.6599 128.61 23.7699C128.61 22.8799 128.47 22.0799 128.18 21.4199C127.89 20.7599 127.49 20.2499 126.97 19.8799C126.45 19.5199 125.83 19.3399 125.12 19.3399C124.41 19.3399 123.79 19.5199 123.27 19.8799C122.75 20.2399 122.34 20.7499 122.06 21.4199C121.77 22.0799 121.63 22.8699 121.63 23.7699C121.63 24.6699 121.77 25.4399 122.06 26.0999C122.35 26.7599 122.75 27.2699 123.27 27.6399C123.79 27.9999 124.41 28.1799 125.12 28.1799Z" fill="white"/>
+<path d="M21.5 0H0.5V32H21.5V0Z" fill="#E95420"/>
+<path d="M5.29988 23.32C6.49834 23.32 7.46988 22.3484 7.46988 21.15C7.46988 19.9515 6.49834 18.98 5.29988 18.98C4.10142 18.98 3.12988 19.9515 3.12988 21.15C3.12988 22.3484 4.10142 23.32 5.29988 23.32Z" fill="white"/>
+<path d="M14.3599 18.56C15.5584 18.56 16.5299 17.5884 16.5299 16.39C16.5299 15.1915 15.5584 14.22 14.3599 14.22C13.1615 14.22 12.1899 15.1915 12.1899 16.39C12.1899 17.5884 13.1615 18.56 14.3599 18.56Z" fill="white"/>
+<path d="M10.2 26.75C8.62998 26.41 7.32998 25.41 6.58998 24C6.00998 24.26 5.35998 24.34 4.72998 24.23C5.61998 26.42 7.50998 28 9.82998 28.5C10.34 28.61 10.86 28.66 11.37 28.66C10.97 28.14 10.75 27.5 10.73 26.84C10.55 26.82 10.37 26.79 10.2 26.75Z" fill="white"/>
+<path d="M13.8702 28.9301C15.0687 28.9301 16.0402 27.9585 16.0402 26.7601C16.0402 25.5616 15.0687 24.5901 13.8702 24.5901C12.6717 24.5901 11.7002 25.5616 11.7002 26.7601C11.7002 27.9585 12.6717 28.9301 13.8702 28.9301Z" fill="white"/>
+<path d="M16.8898 25.9601C17.5698 25.1101 18.0398 24.1001 18.2698 23.0301C18.6698 21.1601 18.2998 19.2001 17.2398 17.6101C16.9898 18.2001 16.5598 18.7001 16.0198 19.0401C16.6098 20.1501 16.7898 21.4201 16.5198 22.6501C16.3898 23.2501 16.1598 23.8201 15.8398 24.3301C16.3498 24.7501 16.7098 25.3101 16.8798 25.9501L16.8898 25.9601Z" fill="white"/>
+<path d="M5.12988 18.04C5.18988 18.04 5.23988 18.04 5.29988 18.04C5.51988 18.04 5.73988 18.06 5.95988 18.11C6.30988 18.19 6.64988 18.32 6.94988 18.51C7.92988 17.1 9.50988 16.26 11.2199 16.23C11.2199 16.07 11.2499 15.9 11.2899 15.74C11.3899 15.27 11.5899 14.84 11.8799 14.47C9.14988 14.25 6.48988 15.66 5.13988 18.05L5.12988 18.04Z" fill="white"/>
+</g>
+<defs>
+<clipPath id="clip0_1_7165">
+<rect width="130.71" height="34" fill="white" transform="translate(0.5)"/>
+</clipPath>
+</defs>
+</svg>
diff --git a/gnome-initial-setup/pages/ubuntu-pro/ubuntu-pro.svg b/gnome-initial-setup/pages/ubuntu-pro/ubuntu-pro.svg
new file mode 100644
index 0000000..d377e41
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/ubuntu-pro.svg
@@ -0,0 +1 @@
+<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1444.23 360.27"><defs><style>.cls-1{fill:#e95420;}.cls-2{fill:#fff;}.cls-3{fill:#111;}</style></defs><rect class="cls-1" width="233.93" height="360.27"/><circle class="cls-2" cx="52.26" cy="238.51" r="24.44"/><circle class="cls-2" cx="154.06" cy="184.91" r="24.44"/><path class="cls-2" d="M107.39,301.42a59.52,59.52,0,0,1-40.6-31A35.22,35.22,0,0,1,45.89,273a80.08,80.08,0,0,0,74.65,49.8,35,35,0,0,1-7.16-20.44A60.26,60.26,0,0,1,107.39,301.42Z"/><circle class="cls-2" cx="148.55" cy="301.55" r="24.44"/><path class="cls-2" d="M182.56,292.58a79.94,79.94,0,0,0,4-93.83,35.16,35.16,0,0,1-13.74,16.09,60,60,0,0,1-2,59.53A35,35,0,0,1,182.56,292.58Z"/><path class="cls-2" d="M50.37,203.46c.62,0,1.24-.05,1.87-.05a35.36,35.36,0,0,1,7.37.78,35,35,0,0,1,11.16,4.5,59.63,59.63,0,0,1,48-25.68,36.52,36.52,0,0,1,.74-5.5,35.3,35.3,0,0,1,6.68-14.32A80.38,80.38,0,0,0,50.37,203.46Z"/><path class="cls-3" d="M347.78,331.73q-16.27,0-27.71-5a47.72,47.72,0,0,1-18.52-13.68,54.81,54.81,0,0,1-10.26-20.41,95.22,95.22,0,0,1-3.19-25.12V164.73h16V265.45a75.46,75.46,0,0,0,3.19,23.23,44.78,44.78,0,0,0,8.84,16.16,34.55,34.55,0,0,0,13.68,9.44,54.06,54.06,0,0,0,35.86,0,34.55,34.55,0,0,0,13.68-9.44,44.78,44.78,0,0,0,8.84-16.16,75.46,75.46,0,0,0,3.19-23.23V164.73h16V267.57a95.22,95.22,0,0,1-3.19,25.12A54.81,54.81,0,0,1,394,313.1a47.76,47.76,0,0,1-18.51,13.68Q364.06,331.73,347.78,331.73Z"/><path class="cls-3" d="M460.55,213.56q4-3.06,12.85-6.49a58,58,0,0,1,20.88-3.42,55.7,55.7,0,0,1,23.47,4.72,48.76,48.76,0,0,1,17.33,13.21,58.28,58.28,0,0,1,10.74,20.17,85.49,85.49,0,0,1,3.65,25.59A76.4,76.4,0,0,1,545.11,294,57.25,57.25,0,0,1,532.84,314,52.66,52.66,0,0,1,514,326.66,65.48,65.48,0,0,1,489.56,331q-16.28,0-26.89-2.12a137.63,137.63,0,0,1-17.45-4.48V148l15.33-2.83Zm0,100.25A68.84,68.84,0,0,0,471,316.05a127.35,127.35,0,0,0,18.28,1.06q19.81,0,31.85-12.86t12-36.91a84.07,84.07,0,0,0-2.13-19.23,44.87,44.87,0,0,0-6.84-15.8,34.25,34.25,0,0,0-12.38-10.73q-7.67-4-19-4a49.31,49.31,0,0,0-10.38,1.06,61.57,61.57,0,0,0-9.19,2.71,51,51,0,0,0-12.74,7.08Z"/><path class="cls-3" d="M673.56,324q-6.84,1.89-18.4,4.24a144.38,144.38,0,0,1-28.3,2.36q-13.68,0-22.88-4a37.07,37.07,0,0,1-14.86-11.32A45.88,45.88,0,0,1,581,297.53a98.64,98.64,0,0,1-2.47-22.88v-68.4h15.33V269.7a108.25,108.25,0,0,0,1.88,21.93q1.89,9,6.14,14.51a23.86,23.86,0,0,0,11,8,47.64,47.64,0,0,0,16.39,2.48,132.49,132.49,0,0,0,18.87-1.18c5.34-.79,8.73-1.5,10.14-2.13V206.25h15.33Z"/><path class="cls-3" d="M710.26,210.49q6.84-1.87,18.4-4.24a144.38,144.38,0,0,1,28.3-2.36q13.92,0,23.24,4a35.73,35.73,0,0,1,14.86,11.44,46.84,46.84,0,0,1,7.9,17.81A103.44,103.44,0,0,1,805.32,260v68.16H790V265A115.58,115.58,0,0,0,788.22,243a36.61,36.61,0,0,0-5.9-14.62,23,23,0,0,0-10.85-8.14q-6.72-2.47-16.87-2.47A128.49,128.49,0,0,0,735.85,219q-7.9,1.17-10.26,2.12V328.19H710.26Z"/><path class="cls-3" d="M855.39,206.25H904v13H855.39v64.87A65.79,65.79,0,0,0,857.16,301a23.36,23.36,0,0,0,5.07,10,16,16,0,0,0,8,4.72,42.53,42.53,0,0,0,10.38,1.18q9.66,0,15.56-2.24a67,67,0,0,0,9.2-4.13l3.78,12.74q-3.31,2.13-11.56,4.83a57.11,57.11,0,0,1-17.93,2.72q-11.32,0-19-3a27.48,27.48,0,0,1-12.26-9,36.72,36.72,0,0,1-6.49-15,104.2,104.2,0,0,1-1.88-21.23V170.4l15.33-2.83Z"/><path class="cls-3" d="M1023.33,324q-6.86,1.89-18.4,4.24a144.49,144.49,0,0,1-28.31,2.36q-13.68,0-22.88-4a37.14,37.14,0,0,1-14.86-11.32,45.87,45.87,0,0,1-8.13-17.69,98.62,98.62,0,0,1-2.48-22.88v-68.4H943.6V269.7a108.17,108.17,0,0,0,1.89,21.93q1.89,9,6.13,14.51a23.91,23.91,0,0,0,11,8A47.64,47.64,0,0,0,979,316.64a132.49,132.49,0,0,0,18.87-1.18q8-1.18,10.14-2.13V206.25h15.34Z"/><path class="cls-3" d="M1156.68,163.32q34.68,0,51.66,13.21t17,37.5q0,13.92-5,23.71a40.35,40.35,0,0,1-14.15,15.8q-9.21,6-22.53,8.73a151.33,151.33,0,0,1-30.07,2.71h-22.17v63.21h-16V167.8a115.14,115.14,0,0,1,19.93-3.42Q1146.77,163.32,1156.68,163.32Zm.71,13.92q-9,0-15.21.59t-10.73,1.06v72.17h20.28a163.68,163.68,0,0,0,23.47-1.53,52.38,52.38,0,0,0,17.93-5.66,28.63,28.63,0,0,0,11.44-11.44q4-7.31,4-18.63,0-10.85-4.37-17.93a32.14,32.14,0,0,0-11.56-11.2,50.62,50.62,0,0,0-16.39-5.78A106.64,106.64,0,0,0,1157.39,177.24Z"/><path class="cls-3" d="M1292.85,203.89a82.18,82.18,0,0,1,14.27,1.18,43.81,43.81,0,0,1,9.32,2.36l-3.07,13.21a34.1,34.1,0,0,0-7.66-2,87.42,87.42,0,0,0-15.22-1.06,71.62,71.62,0,0,0-15.92,1.42,44.62,44.62,0,0,0-7.9,2.35V328.19h-15.33V211.91a113,113,0,0,1,16.27-5.31Q1278,203.9,1292.85,203.89Z"/><path class="cls-3" d="M1438.5,267.34a78.87,78.87,0,0,1-4.13,26.18,58.25,58.25,0,0,1-11.56,20.05,52.56,52.56,0,0,1-17.57,12.85,56.86,56.86,0,0,1-44.81,0,52.6,52.6,0,0,1-17.58-12.85,58.39,58.39,0,0,1-11.55-20.05,85,85,0,0,1,0-52.36A59.72,59.72,0,0,1,1342.85,221a51.86,51.86,0,0,1,17.58-13,56.86,56.86,0,0,1,44.81,0,51.82,51.82,0,0,1,17.57,13,59.57,59.57,0,0,1,11.56,20.17A78.87,78.87,0,0,1,1438.5,267.34Zm-16.28,0q0-22.87-10.61-36.44t-28.78-13.57q-18.16,0-28.77,13.57t-10.62,36.44q0,22.88,10.62,36.32t28.77,13.45q18.17,0,28.78-13.45T1422.22,267.34Z"/></svg>
\ No newline at end of file
diff --git a/gnome-initial-setup/pages/ubuntu-pro/ubuntupro.gresource.xml b/gnome-initial-setup/pages/ubuntu-pro/ubuntupro.gresource.xml
new file mode 100644
index 0000000..9257186
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/ubuntupro.gresource.xml
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<gresources>
+  <gresource prefix="/org/gnome/initial-setup">
+    <file preprocess="xml-stripblanks" alias="gis-ubuntupro-page.ui">gis-ubuntupro-page.ui</file>
+    <file preprocess="xml-stripblanks" alias="gis-ubuntupro-offer-page.ui">gis-ubuntupro-offer-page.ui</file>
+    <file preprocess="xml-stripblanks" alias="gis-ubuntupro-attach-page.ui">gis-ubuntupro-attach-page.ui</file>
+    <file preprocess="xml-stripblanks" alias="gis-ubuntupro-services-page.ui">gis-ubuntupro-services-page.ui</file>
+    <file alias="ubuntu-pro-dark.svg">ubuntu-pro-dark.svg</file>
+    <file alias="ubuntu-pro.svg">ubuntu-pro.svg</file>
+    <file alias="checkmark.svg">checkmark.svg</file>
+    <file alias="fail.svg">fail.svg</file>
+  </gresource>
+</gresources>
+
diff --git a/gnome-initial-setup/pages/ubuntu-pro/utils.c b/gnome-initial-setup/pages/ubuntu-pro/utils.c
new file mode 100644
index 0000000..0441c91
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/utils.c
@@ -0,0 +1,119 @@
+#include <adwaita.h>
+#include <libsoup/soup.h>
+#include "gis-ubuntupro-page.h"
+
+gboolean
+parse_ua_status(gchar **contents, gsize *len)
+{
+    g_autoptr(GError) error = NULL;
+
+    if (!g_file_get_contents("/var/lib/ubuntu-advantage/status.json",
+                             contents, len, &error)) {
+        g_warning("Unable to read pro status: %s\n", error->message);
+        return FALSE;
+    }
+    return TRUE;
+}
+
+gboolean
+get_ubuntu_advantage_attached(gboolean *attached)
+{
+  g_autoptr(GError) error = NULL;
+  g_autoptr(GDBusConnection) bus = g_bus_get_sync (G_BUS_TYPE_SYSTEM, NULL, &error);
+  if (bus == NULL) {
+    g_warning ("Failed to get system bus: %s", error->message);
+    return FALSE;
+  }
+
+  g_autoptr(GVariant) result = g_dbus_connection_call_sync (bus,
+      "com.canonical.UbuntuAdvantage",
+      "/com/canonical/UbuntuAdvantage/Manager",
+      "org.freedesktop.DBus.Properties",
+      "Get",
+      g_variant_new ("(ss)", "com.canonical.UbuntuAdvantage.Manager", "Attached"),
+      G_VARIANT_TYPE ("(v)"),
+      G_DBUS_CALL_FLAGS_NONE,
+      -1,
+      NULL,
+      &error);
+  if (result == NULL) {
+    g_warning ("Failed to contact Ubuntu Advantage D-Bus service: %s", error->message);
+    return FALSE;
+  }
+
+  g_autoptr(GVariant) value = NULL;
+  g_variant_get (result, "(v)", &value);
+  if (!g_variant_is_of_type (value, G_VARIANT_TYPE("b"))) {
+    g_warning ("Attached property has wrong type");
+    return FALSE;
+  }
+  g_variant_get (value, "b", attached);
+
+  return TRUE;
+}
+
+char *
+get_item (const char *buffer, const char *name)
+{
+  g_autofree gchar *label = NULL;
+  gchar *start = NULL, *end = NULL;
+  gchar end_char;
+
+  label = g_strconcat (name, "=", NULL);
+  if ((start = strstr (buffer, label)) != NULL) {
+    start += strlen (label);
+    end_char = '\n';
+    if (*start == '"') {
+      start++;
+      end_char = '"';
+    }
+    end = strchr (start, end_char);
+  }
+
+  if (start != NULL && end != NULL)
+    return g_strndup (start, end - start);
+  else
+    return NULL;
+}
+
+gboolean
+is_lts ()
+{
+  g_autofree gchar *buffer = NULL;
+  g_autofree gchar *version = NULL;
+
+  if (g_file_get_contents ("/etc/os-release", &buffer, NULL, NULL))
+    version = get_item (buffer, "VERSION");
+
+  return version && g_strrstr (version, "LTS") != NULL;
+}
+
+gboolean
+is_ubuntupro_supported ()
+{
+  return is_lts ();
+}
+
+/* Routine from Gnome Control Center
+ * https://gitlab.gnome.org/GNOME/gnome-control-center/-/commit/a3b8964a */
+gboolean
+is_dark_theme (GtkWidget *widget)
+{
+  g_autofree char *theme_name = NULL;
+
+  theme_name = g_strdup (g_getenv ("GTK_THEME"));
+  if (theme_name != NULL) {
+    return g_str_has_suffix (theme_name, "-dark");
+  }
+
+  AdwStyleManager *manager = adw_style_manager_get_default ();
+  return adw_style_manager_get_dark (manager);
+}
+
+void
+itemize(gchar *str, const gchar *append, gsize len)
+{
+  g_strlcat(str, "• ", len);
+  g_strlcat(str, append, len);
+  g_strlcat(str, "\n", len);
+}
diff --git a/gnome-initial-setup/pages/ubuntu-pro/utils.h b/gnome-initial-setup/pages/ubuntu-pro/utils.h
new file mode 100644
index 0000000..ceefe72
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-pro/utils.h
@@ -0,0 +1,7 @@
+gboolean parse_ua_status(gchar**, gsize*);
+gboolean get_ubuntu_advantage_attached(gboolean*);
+char *get_item(const char*, const char*);
+gboolean is_lts();
+gboolean is_ubuntupro_supported();
+gboolean is_dark_theme(GtkWidget*);
+void itemize(gchar*, const gchar*, gsize);
diff --git a/gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.c b/gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.c
new file mode 100644
index 0000000..7321984
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.c
@@ -0,0 +1,456 @@
+/* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
+/*
+ * Copyright (C) 2018 Canonical Ltd.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, see <http://www.gnu.org/licenses/>.
+ */
+
+/* Ubuntu report page {{{1 */
+
+#define PAGE_ID "ubuntu-report"
+
+#include "config.h"
+#include "gis-ubuntu-report-page.h"
+#include "gis-page-header.h"
+#include "ubuntu-report-resources.h"
+
+#include <glib/gi18n.h>
+#include <gio/gio.h>
+#include <libsysmetrics.h>
+
+struct _GisUbuntuReportPage {
+  GisPage parent;
+
+  GtkWidget *opt_in_check;
+  GtkWidget *header;
+  GtkWidget *cancel_report_b;
+  GtkWidget *show_report_b;
+  GCancellable *cancellable;
+  gchar *report;
+};
+
+G_DEFINE_TYPE (GisUbuntuReportPage, gis_ubuntu_report_page, GIS_TYPE_PAGE);
+
+static void
+cancel_report (GtkButton *button, GisUbuntuReportPage *page)
+{
+  gtk_widget_set_visible (GTK_WIDGET (page->cancel_report_b), FALSE);
+  gtk_widget_set_visible (GTK_WIDGET (page->show_report_b), TRUE);
+
+  g_cancellable_cancel (page->cancellable);
+  g_clear_object (&page->cancellable);
+  page->cancellable = g_cancellable_new ();
+}
+
+static void
+gis_ubuntu_report_page_constructed (GObject *object)
+{
+  GisUbuntuReportPage *page = GIS_UBUNTU_REPORT_PAGE (object);
+  g_autoptr(GtkWidget) image = NULL;
+
+  G_OBJECT_CLASS (gis_ubuntu_report_page_parent_class)->constructed (object);
+
+  page->cancellable = g_cancellable_new ();
+  g_signal_connect(page->cancel_report_b, "clicked", G_CALLBACK(cancel_report), page);
+
+  image = g_object_ref_sink (gtk_image_new_from_resource (
+    "/org/gnome/initial-setup/ubuntu-report.svg"));
+  g_object_set (page->header, "paintable", gtk_image_get_paintable (GTK_IMAGE (image)), NULL);
+
+  gis_page_set_complete (GIS_PAGE (page), TRUE);
+}
+
+static void
+gis_ubuntu_report_page_finalize (GObject *object)
+{
+  GisUbuntuReportPage *page = GIS_UBUNTU_REPORT_PAGE (object);
+
+  g_cancellable_cancel (page->cancellable);
+  g_clear_object (&page->cancellable);
+
+  g_free (page->report);
+
+  G_OBJECT_CLASS (gis_ubuntu_report_page_parent_class)->finalize (object);
+}
+
+static void
+on_collect_report_thread (GTask        *task,
+                          gpointer      source_object,
+                          gpointer      task_data,
+                          GCancellable *cancellable)
+{
+  g_autofree char *report = NULL;
+  g_autofree char *error_msg = NULL;
+
+  error_msg = sysmetrics_collect (&report);
+  if (error_msg != NULL) {
+    g_task_return_new_error (task, G_IO_ERROR, G_IO_ERROR_FAILED, "%s", error_msg);
+    return;
+  }
+
+  g_task_return_pointer (task, g_steal_pointer (&report), g_free);
+}
+
+static void
+on_show_report_callback (GObject      *source_object,
+                         GAsyncResult *res,
+                         gpointer      user_data)
+{
+  GtkWidget *dialog, *scroll, *text_view;
+  GTask *task = G_TASK (res);
+  g_autoptr (GError) error = NULL;
+  GisUbuntuReportPage *page = GIS_UBUNTU_REPORT_PAGE (user_data);
+
+  gtk_widget_set_visible (GTK_WIDGET (page->show_report_b), TRUE);
+  gtk_widget_set_visible (GTK_WIDGET (page->cancel_report_b), FALSE);
+
+  page->report = g_task_propagate_pointer (task, &error);
+
+  if (g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED))
+    return;
+
+  if (error != NULL) {
+    dialog = gtk_message_dialog_new (GTK_WINDOW (gtk_widget_get_root (GTK_WIDGET (page))),
+                                     GTK_DIALOG_MODAL | GTK_DIALOG_DESTROY_WITH_PARENT,
+                                     GTK_MESSAGE_ERROR,
+                                     GTK_BUTTONS_CLOSE,
+                                     _("Failed to get report information: %s"),
+                                     error->message);
+    g_signal_connect_swapped (dialog,
+                              "response",
+                              G_CALLBACK (gtk_window_destroy),
+                              dialog);
+    gtk_window_present (GTK_WINDOW (dialog));
+    return;
+  }
+
+  dialog = gtk_dialog_new_with_buttons (_("Ubuntu Report Contents"),
+                                        GTK_WINDOW (gtk_widget_get_root (GTK_WIDGET (page))),
+                                        GTK_DIALOG_MODAL |
+                                        GTK_DIALOG_DESTROY_WITH_PARENT |
+                                        GTK_DIALOG_USE_HEADER_BAR,
+                                        NULL, NULL);
+  gtk_widget_set_size_request (dialog, 800, 600);
+
+  scroll = gtk_scrolled_window_new ();
+
+  text_view = gtk_text_view_new ();
+  gtk_text_view_set_monospace (GTK_TEXT_VIEW (text_view), TRUE);
+  gtk_widget_set_hexpand (scroll, TRUE);
+  gtk_widget_set_vexpand (scroll, TRUE);
+  gtk_widget_set_margin_top (scroll, 6);
+  gtk_widget_set_margin_bottom (scroll, 6);
+  gtk_widget_set_margin_start (scroll, 6);
+  gtk_widget_set_margin_end (scroll, 6);
+  gtk_box_append (GTK_BOX (gtk_dialog_get_content_area (GTK_DIALOG (dialog))), scroll);
+  gtk_text_buffer_set_text (gtk_text_view_get_buffer (GTK_TEXT_VIEW (text_view)), page->report, -1);
+  gtk_scrolled_window_set_child (GTK_SCROLLED_WINDOW (scroll), text_view);
+
+  g_signal_connect_swapped (dialog,
+                            "response",
+                            G_CALLBACK (gtk_window_destroy),
+                            dialog);
+  gtk_window_present (GTK_WINDOW (dialog));
+}
+
+static void
+show_report (GtkButton *button, GisUbuntuReportPage *page)
+{
+  g_autofree char *error = NULL;
+  g_autoptr(GTask) task = NULL;
+
+  gtk_widget_set_visible (GTK_WIDGET (page->show_report_b), FALSE);
+  gtk_widget_set_visible (GTK_WIDGET (page->cancel_report_b), TRUE);
+
+  task = g_task_new (page, page->cancellable, on_show_report_callback, page);
+
+  if (page->report) {
+    g_task_return_pointer (task, g_steal_pointer (&page->report), NULL);
+    return;
+  }
+
+  g_task_set_return_on_cancel (task, TRUE);
+  g_task_run_in_thread (task, on_collect_report_thread);
+}
+
+static void
+on_show_uri_cb (GObject *source_object,
+                GAsyncResult *result,
+                gpointer user_data)
+{
+  g_autoptr(GError) error = NULL;
+  GisUbuntuReportPage *page = user_data;
+
+  if (!gtk_show_uri_full_finish (GTK_WINDOW (source_object), result, &error)) {
+    GtkWidget *dialog;
+
+    if (g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED))
+      return;
+
+    dialog = gtk_message_dialog_new (GTK_WINDOW (gtk_widget_get_root (GTK_WIDGET (page))),
+                                     GTK_DIALOG_MODAL | GTK_DIALOG_DESTROY_WITH_PARENT,
+                                     GTK_MESSAGE_ERROR,
+                                     GTK_BUTTONS_CLOSE,
+                                     _("Failed to show privacy policy: %s"), error->message);
+    g_signal_connect_swapped (dialog,
+                              "response",
+                              G_CALLBACK (gtk_window_destroy),
+                              dialog);
+    gtk_window_present (GTK_WINDOW (dialog));
+  }
+}
+
+static void
+show_legal (GtkButton *button, GisUbuntuReportPage *page)
+{
+  gtk_show_uri_full (GTK_WINDOW (gtk_widget_get_root (GTK_WIDGET (page))),
+                     "https://www.ubuntu.com/legal/terms-and-policies/systems-information-notice",
+                     GDK_CURRENT_TIME, page->cancellable, on_show_uri_cb, page);
+}
+
+typedef struct {
+  gboolean send_allowed;
+  gchar *report;
+  guint timeout_id;
+} SendReportThreadData;
+
+static void
+send_report_thread_data_free (SendReportThreadData *data)
+{
+  g_clear_handle_id (&data->timeout_id, g_source_remove);
+  g_free (data->report);
+  g_free (data);
+}
+
+static void
+on_collect_send_report_thread (GTask *task,
+                               gpointer source_object,
+                               gpointer task_data,
+                               GCancellable *cancellable)
+{
+  SendReportThreadData *data = task_data;
+  g_autofree char *error = NULL;
+
+  if (!data->send_allowed) {
+    error = sysmetrics_send_decline (FALSE, "");
+
+    if (g_task_get_completed (task))
+      return;
+
+    if (error != NULL) {
+      g_task_return_new_error (task, G_IO_ERROR, G_IO_ERROR_FAILED,
+                               _("Failed to send report decline: %s"), error);
+      return;
+    }
+
+    g_task_return_boolean (task, TRUE);
+    return;
+  }
+
+  if (!data->report) {
+    error = sysmetrics_collect (&data->report);
+
+    if (g_task_get_completed (task))
+      return;
+
+    if (error != NULL) {
+      g_task_return_new_error (task, G_IO_ERROR, G_IO_ERROR_FAILED,
+                               _("Failed to get report information: %s"), error);
+      return;
+    }
+  }
+
+  if (g_task_return_error_if_cancelled (task))
+    return;
+
+  g_assert (data->report);
+  error = sysmetrics_send_report (data->report, FALSE, "");
+
+  if (g_task_get_completed (task))
+    return;
+
+  if (error != NULL) {
+    g_task_return_new_error (task, G_IO_ERROR, G_IO_ERROR_FAILED,
+                             _("Failed to send report information: %s"), error);
+    return;
+  }
+
+  g_task_return_boolean (task, TRUE);
+}
+
+static void
+on_error_dialog_dismissed (GisUbuntuReportPage *page)
+{
+  gis_page_apply_complete (GIS_PAGE (page), TRUE);
+}
+
+static void
+show_report_error_dialog (GisUbuntuReportPage *page,
+                          const char          *message)
+{
+  GtkWidget *dialog;
+
+  dialog = gtk_message_dialog_new (GTK_WINDOW (gtk_widget_get_root (GTK_WIDGET (page))),
+                                   GTK_DIALOG_MODAL | GTK_DIALOG_DESTROY_WITH_PARENT,
+                                   GTK_MESSAGE_ERROR,
+                                   GTK_BUTTONS_CLOSE,
+                                   "%s", message);
+  g_signal_connect_swapped (dialog,
+                            "response",
+                            G_CALLBACK (on_error_dialog_dismissed),
+                            page);
+  g_signal_connect_swapped (dialog,
+                            "response",
+                            G_CALLBACK (gtk_window_destroy),
+                            dialog);
+
+  gtk_window_present (GTK_WINDOW (g_steal_pointer (&dialog)));
+}
+
+static void
+on_collect_send_report_callback (GObject *source_object,
+                                 GAsyncResult *res,
+                                 gpointer user_data)
+{
+  GTask *task = G_TASK (res);
+  GisUbuntuReportPage *page = GIS_UBUNTU_REPORT_PAGE (source_object);
+  g_autoptr (GError) error = NULL;
+
+  gtk_widget_set_sensitive (GTK_WIDGET (page), TRUE);
+
+  if (!g_task_propagate_boolean (task, &error)) {
+    g_warning ("%s", error->message);
+
+    if (g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED)) {
+      /* User cancelled the action, so let's back to selection */
+      gis_page_apply_complete (GIS_PAGE (page), FALSE);
+      return;
+    }
+
+    show_report_error_dialog (page, error->message);
+    return;
+  }
+
+  gis_page_apply_complete (GIS_PAGE (page), TRUE);
+}
+
+static gboolean
+on_apply_timeout (gpointer data)
+{
+  SendReportThreadData *task_data;
+  GTask *task = G_TASK (data);
+
+  task_data = g_task_get_task_data (task);
+  task_data->timeout_id = 0;
+
+  if (g_task_get_completed (task)) {
+    return FALSE;
+  }
+
+  /* Here we can't just g_task_return_error, because it won't make the error
+   * being handled until the task thread is terminated. So we just cancel it
+   * adding some special handling on callback.
+   */
+  g_cancellable_cancel (g_task_get_cancellable (task));
+  return FALSE;
+}
+
+/* Retrieve and send the report (or decline thereof).
+ * Don't wait on the server to respond though, go to next page immediately.
+ * Ubuntu Report will take care of sending it via a Systemd service if the
+ * thread doesn't manage to do it anyway.
+ */
+static gboolean
+gis_ubuntu_report_page_apply (GisPage *gis_page, GCancellable *cancellable)
+{
+  GisUbuntuReportPage *page = GIS_UBUNTU_REPORT_PAGE (gis_page);
+  g_autofree char *error = NULL;
+  g_autoptr(GTask) task = NULL;
+  SendReportThreadData *data;
+
+  data = g_new0 (SendReportThreadData, 1);
+  data->send_allowed = gtk_check_button_get_active (GTK_CHECK_BUTTON (page->opt_in_check));
+  data->report = g_steal_pointer (&page->report);
+
+  task = g_task_new (page, cancellable, on_collect_send_report_callback, NULL);
+  g_task_set_return_on_cancel (task, TRUE);
+  data->timeout_id = g_timeout_add_seconds (15, on_apply_timeout, task);
+  g_task_set_task_data (task, g_steal_pointer (&data),
+                        (GDestroyNotify) send_report_thread_data_free);
+
+  gtk_widget_set_sensitive (GTK_WIDGET (page), FALSE);
+  g_task_run_in_thread (task, on_collect_send_report_thread);
+
+  return TRUE;
+}
+
+static void
+gis_ubuntu_report_page_locale_changed (GisPage *gis_page)
+{
+  GisUbuntuReportPage *page = GIS_UBUNTU_REPORT_PAGE (gis_page);
+  g_autofree gchar *timezone_text = NULL;
+  g_autofree gchar *description_text = NULL;
+  g_autoptr(GError) error = NULL;
+
+  gis_page_set_title (GIS_PAGE (page), _("Help improve Ubuntu"));
+
+  if (!g_file_get_contents ("/etc/timezone", &timezone_text, NULL, &error)) {
+    g_warning ("Failed to get timezone from /etc/timezone: %s", error->message);
+    return;
+  }
+
+  description_text = g_strdup_printf (_("Ubuntu can report information that helps developers improve it. "
+                                        "This includes things like the computer model, "
+					"what software is installed, "
+					"and the approximate location you chose (%s)."), g_strstrip (timezone_text));
+  g_object_set (page->header, "subtitle", description_text, NULL);
+}
+
+static void
+gis_ubuntu_report_page_class_init (GisUbuntuReportPageClass *klass)
+{
+  GisPageClass *page_class = GIS_PAGE_CLASS (klass);
+  GObjectClass *object_class = G_OBJECT_CLASS (klass);
+
+  gtk_widget_class_set_template_from_resource (GTK_WIDGET_CLASS (klass), "/org/gnome/initial-setup/gis-ubuntu-report-page.ui");
+  gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisUbuntuReportPage, header);
+  gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisUbuntuReportPage, show_report_b);
+  gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisUbuntuReportPage, cancel_report_b);
+  gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisUbuntuReportPage, opt_in_check);
+  gtk_widget_class_bind_template_callback (GTK_WIDGET_CLASS (klass), show_report);
+  gtk_widget_class_bind_template_callback (GTK_WIDGET_CLASS (klass), show_legal);
+
+  page_class->page_id = PAGE_ID;
+  page_class->apply = gis_ubuntu_report_page_apply;
+  page_class->locale_changed = gis_ubuntu_report_page_locale_changed;
+  object_class->constructed = gis_ubuntu_report_page_constructed;
+  object_class->finalize = gis_ubuntu_report_page_finalize;
+}
+
+static void
+gis_ubuntu_report_page_init (GisUbuntuReportPage *page)
+{
+  g_resources_register (ubuntu_report_get_resource ());
+  g_type_ensure (GIS_TYPE_PAGE_HEADER);
+
+  gtk_widget_init_template (GTK_WIDGET (page));
+}
+
+GisPage *
+gis_prepare_ubuntu_report_page (GisDriver *driver)
+{
+  return g_object_new (GIS_TYPE_UBUNTU_REPORT_PAGE,
+                       "driver", driver,
+                       NULL);
+}
diff --git a/gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.h b/gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.h
new file mode 100644
index 0000000..846eb9b
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.h
@@ -0,0 +1,33 @@
+/* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
+/*
+ * Copyright (C) 2018 Canonical Ltd.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of the
+ * License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef __GIS_UBUNTU_REPORT_PAGE_H__
+#define __GIS_UBUNTU_REPORT_PAGE_H__
+
+#include "gnome-initial-setup.h"
+
+G_BEGIN_DECLS
+
+#define GIS_TYPE_UBUNTU_REPORT_PAGE            (gis_ubuntu_report_page_get_type ())
+G_DECLARE_FINAL_TYPE (GisUbuntuReportPage, gis_ubuntu_report_page, GIS, UBUNTU_REPORT_PAGE, GisPage);
+
+GisPage *gis_prepare_ubuntu_report_page (GisDriver *driver);
+
+G_END_DECLS
+
+#endif /* __GIS_UBUNTU_REPORT_PAGE_H__ */
diff --git a/gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.ui b/gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.ui
new file mode 100644
index 0000000..ad0816c
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.ui
@@ -0,0 +1,104 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<interface>
+  <template class="GisUbuntuReportPage" parent="GisPage">
+    <child>
+      <object class="AdwPreferencesPage">
+
+        <child>
+          <object class="AdwPreferencesGroup">
+            <child>
+              <object class="GisPageHeader" id="header">
+                <property name="margin_top">24</property>
+                <property name="title" translatable="yes">Help improve Ubuntu</property>
+                <property name="show_icon" bind-source="GisUbuntuReportPage" bind-property="small-screen" bind-flags="invert-boolean|sync-create"/>
+              </object>
+            </child>
+          </object>
+        </child>
+
+        <child>
+          <object class="AdwPreferencesGroup" id="opt_in_group">
+            <child>
+              <object class="AdwActionRow">
+                <property name="title" translatable="yes">Yes, send system info to Canonical</property>
+                <property name="use-underline">True</property>
+                <property name="activatable-widget">opt_in_check</property>
+                <child type="prefix">
+                  <object class="GtkCheckButton" id="opt_in_check">
+                    <property name="active">True</property>
+                    <property name="valign">center</property>
+                  </object>
+                </child>
+              </object>
+            </child>
+            <child>
+              <object class="AdwActionRow">
+                <property name="title" translatable="yes">No, don&apos;t send system info</property>
+                <property name="use-underline">True</property>
+                <property name="activatable-widget">opt_out_check</property>
+                <child type="prefix">
+                  <object class="GtkCheckButton" id="opt_out_check">
+                    <property name="valign">center</property>
+                    <property name="group">opt_in_check</property>
+                  </object>
+                </child>
+              </object>
+            </child>
+          </object>
+        </child>
+
+        <child>
+          <object class="AdwPreferencesGroup">
+            <child>
+              <object class="GtkBox">
+                <property name="halign">end</property>
+                <style>
+                  <class name="linked" />
+                </style>
+                <child>
+                  <object class="GtkButton" id="show_report_b">
+                    <property name="visible">True</property>
+                    <property name="label" translatable="1">Show the First Report</property>
+                    <signal name="clicked" handler="show_report"/>
+                  </object>
+                </child>
+                <child>
+                  <object class="GtkButton" id="cancel_report_b">
+                    <property name="visible">False</property>
+                    <property name="label" translatable="1">Cancel</property>
+                  </object>
+                </child>
+                <child>
+                  <object class="GtkButton">
+                    <property name="label" translatable="1">Legal notice</property>
+                    <signal name="clicked" handler="show_legal"/>
+                  </object>
+                </child>
+              </object>
+            </child>
+          </object>
+        </child>
+
+        <child>
+          <object class="AdwPreferencesGroup">
+          <!-- Disabled for now as setting doesn't exist - remove if we decide it's not necessary -->
+          <property name="visible">False</property>
+            <child>
+              <object class="GtkLabel" id="footer_label">
+                <property name="valign">end</property>
+                <property name="vexpand">True</property>
+                <property name="label" translatable="yes">You can change your mind later in Settings → Privacy → Diagnostics.</property>
+                <property name="justify">center</property>
+                <property name="wrap">True</property>
+                <style>
+                  <class name="dim-label"/>
+                </style>
+              </object>
+            </child>
+          </object>
+        </child>
+
+      </object>
+    </child>
+  </template>
+</interface>
diff --git a/gnome-initial-setup/pages/ubuntu-report/meson.build b/gnome-initial-setup/pages/ubuntu-report/meson.build
new file mode 100644
index 0000000..a0f949b
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-report/meson.build
@@ -0,0 +1,10 @@
+sources += gnome.compile_resources(
+    'ubuntu-report-resources',
+    files('ubuntu-report.gresource.xml'),
+    c_name: 'ubuntu_report'
+)
+
+sources += files(
+    'gis-ubuntu-report-page.c',
+    'gis-ubuntu-report-page.h',
+)
diff --git a/gnome-initial-setup/pages/ubuntu-report/ubuntu-report.gresource.xml b/gnome-initial-setup/pages/ubuntu-report/ubuntu-report.gresource.xml
new file mode 100644
index 0000000..6b28415
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-report/ubuntu-report.gresource.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<gresources>
+  <gresource prefix="/org/gnome/initial-setup">
+    <file preprocess="xml-stripblanks" alias="gis-ubuntu-report-page.ui">gis-ubuntu-report-page.ui</file>
+    <file alias="ubuntu-report.svg">ubuntu-report.svg</file>
+  </gresource>
+</gresources>
+
diff --git a/gnome-initial-setup/pages/ubuntu-report/ubuntu-report.svg b/gnome-initial-setup/pages/ubuntu-report/ubuntu-report.svg
new file mode 100644
index 0000000..8c1d52c
--- /dev/null
+++ b/gnome-initial-setup/pages/ubuntu-report/ubuntu-report.svg
@@ -0,0 +1 @@
+<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="Layer_1" x="0px" y="0px" width="150px" height="150px" viewBox="0 0 400 400" style="enable-background:new 0 0 400 400;" xml:space="preserve"> <style type="text/css"> .st0{fill:#666666; fill-opacity:0.25;} </style> <g> <path class="st0" d="M301.4,372.4C271.7,390,237,400,200,400C89.5,400,0,310.5,0,200C0,89.5,89.5,0,200,0c110.5,0,200,89.5,200,200 c0,36.4-9.7,70.6-26.8,100l0,0L400,400l-100-26.8L301.4,372.4L301.4,372.4z"/> </g> </svg>
diff --git a/po/POTFILES.in b/po/POTFILES.in
index 10536d1..7b2c21d 100644
--- a/po/POTFILES.in
+++ b/po/POTFILES.in
@@ -43,3 +43,8 @@ gnome-initial-setup/pages/timezone/gis-timezone-page.ui
 gnome-initial-setup/pages/welcome/gis-welcome-page.c
 gnome-initial-setup/pages/welcome/gis-welcome-page.ui
 po/EXTRA_STRINGS.sh
+gnome-initial-setup/pages/timezone/gis-timezone-page.ui
+gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.c
+gnome-initial-setup/pages/ubuntu-report/gis-ubuntu-report-page.ui
+gnome-initial-setup/pages/apps/gis-apps-page.c
+gnome-initial-setup/pages/apps/gis-apps-page.ui
