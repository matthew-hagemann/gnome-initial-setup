Index: gnome-initial-setup/gnome-initial-setup/pages/account/gis-account-page-local.c
===================================================================
--- gnome-initial-setup.orig/gnome-initial-setup/pages/account/gis-account-page-local.c
+++ gnome-initial-setup/gnome-initial-setup/pages/account/gis-account-page-local.c
@@ -28,6 +28,7 @@
 #include <glib/gi18n.h>
 #include <gio/gio.h>
 #include <glib/gstdio.h>
+#include <netdb.h>
 
 #include <string.h>
 #include <act/act-user-manager.h>
@@ -59,10 +60,13 @@ struct _GisAccountPageLocal
   GtkWidget *header;
   GtkWidget *fullname_entry;
   GtkWidget *username_combo;
+  GtkWidget *hostname_entry;
   GtkWidget *enable_parental_controls_box;
   GtkWidget *enable_parental_controls_check_button;
   gboolean   has_custom_username;
+  gboolean   has_custom_hostname;
   GtkWidget *username_explanation;
+  GtkWidget *hostname_explanation;
   UmPhotoDialog *photo_dialog;
 
   gint timeout_id;
@@ -71,6 +75,7 @@ struct _GisAccountPageLocal
 
   gboolean valid_name;
   gboolean valid_username;
+  gboolean valid_hostname;
   ActUserAccountType account_type;
 };
 
@@ -111,11 +116,41 @@ update_avatar_text (GisAccountPageLocal
   adw_avatar_set_text (ADW_AVATAR (page->avatar_image), name);
 }
 
+gboolean
+is_valid_hostname (const gchar *hostname, gchar **tip)
+{
+  gboolean valid = FALSE;
+
+  valid = is_valid_username (hostname, FALSE, tip);
+  if (!valid)
+  {
+    if (strlen(hostname) == 0)
+    {
+      // The user hint is meanless in that case.
+      g_free (*tip);
+      *tip = g_strdup ("");  
+    }
+    return valid;
+  }
+
+  // Empty to tip of "valid hostname" as is_valid_username returned true.
+  // We donâ€™t have a tip for hostname already on the network.
+  g_free (*tip);
+  *tip = g_strdup ("");
+
+  // Check if hostname is not on the network anymore.
+  struct hostent *host = gethostbyname (hostname);
+  if (host != NULL)
+    return FALSE;
+
+  return TRUE;
+}
+
 static gboolean
 validate (GisAccountPageLocal *page)
 {
   GtkWidget *entry;
-  const gchar *name, *username;
+  const gchar *name, *username, *hostname;
   gboolean parental_controls_enabled;
   gchar *tip;
 
@@ -125,6 +160,7 @@ validate (GisAccountPageLocal *page)
 
   name = gtk_editable_get_text (GTK_EDITABLE (page->fullname_entry));
   username = gtk_combo_box_text_get_active_text (GTK_COMBO_BOX_TEXT (page->username_combo));
+  hostname = gtk_editable_get_text (GTK_EDITABLE (page->hostname_entry));
 #ifdef HAVE_PARENTAL_CONTROLS
   parental_controls_enabled = gtk_check_button_get_active (GTK_CHECK_BUTTON (page->enable_parental_controls_check_button));
 #else
@@ -142,6 +178,13 @@ validate (GisAccountPageLocal *page)
   gtk_label_set_text (GTK_LABEL (page->username_explanation), tip);
   g_free (tip);
 
+  /* Reuse the username validation to get the correct hint for now without adding new translations. */
+  page->valid_hostname = is_valid_hostname (hostname, &tip);
+  if (page->valid_hostname)
+    set_entry_validation_checkmark (GTK_ENTRY (page->hostname_entry));
+  gtk_label_set_text (GTK_LABEL (page->hostname_explanation), tip);
+  g_free (tip);
+
   validation_changed (page);
 
   return G_SOURCE_REMOVE;
@@ -206,6 +249,10 @@ username_changed (GtkComboBoxText     *c
 
   clear_entry_validation_error (GTK_ENTRY (entry));
 
+  if (!page->has_custom_hostname) {
+    gtk_editable_set_text (GTK_EDITABLE (page->hostname_entry), username);
+  }
+
   page->valid_username = FALSE;
   validation_changed (page);
 
@@ -216,6 +263,42 @@ username_changed (GtkComboBoxText     *c
   update_avatar_text (page);
 }
 
+static bool
+util_widget_is_focused (GtkWidget *w)
+{
+  GtkRoot *root = gtk_widget_get_root (w);
+  if (!root)
+    return false;
+
+  GtkWidget *focused = gtk_root_get_focus (root);
+  if (!focused)
+    return false;
+
+  return gtk_widget_is_ancestor (focused, w);
+}
+
+static void
+hostname_changed (GtkWidget      *w,
+                  GParamSpec     *pspec,
+                  GisAccountPageLocal *page)
+{
+  clear_entry_validation_error (GTK_ENTRY (w));
+
+  const gchar *hostname;
+  hostname = gtk_editable_get_text (GTK_EDITABLE (w));
+  if (*hostname == '\0')
+    page->has_custom_hostname = FALSE;
+  else if (util_widget_is_focused (w))
+    page->has_custom_hostname = TRUE;
+
+  page->valid_hostname = FALSE;
+  validation_changed (page);
+
+  if (page->timeout_id != 0)
+    g_source_remove (page->timeout_id);
+  page->timeout_id = g_timeout_add (VALIDATION_TIMEOUT, (GSourceFunc)validate, page);
+}
+
 static void
 on_remove_avatar_button_clicked (GisAccountPageLocal *page)
 {
@@ -297,10 +380,16 @@ gis_account_page_local_constructed (GObj
                     G_CALLBACK (username_changed), page);
   track_focus_out (page, page->username_combo);
 
+  g_signal_connect (page->hostname_entry, "notify::text",
+                    G_CALLBACK (hostname_changed), page);
+  track_focus_out (page, page->hostname_entry);
+
   g_signal_connect_swapped (gtk_combo_box_get_child (GTK_COMBO_BOX (page->username_combo)),
                             "activate", G_CALLBACK (confirm), page);
   g_signal_connect_swapped (page->fullname_entry, "activate",
                             G_CALLBACK (confirm), page);
+  g_signal_connect_swapped (page->fullname_entry, "activate",
+                            G_CALLBACK (confirm), page);
   g_signal_connect (page->enable_parental_controls_check_button, "toggled",
                     G_CALLBACK (enable_parental_controls_check_button_toggled_cb), page);
 
@@ -311,6 +400,7 @@ gis_account_page_local_constructed (GObj
 
   page->valid_name = FALSE;
   page->valid_username = FALSE;
+  page->valid_hostname = FALSE;
 
   /* FIXME: change this for a large deployment scenario; maybe through a GSetting? */
   page->account_type = ACT_USER_ACCOUNT_TYPE_ADMINISTRATOR;
@@ -319,6 +409,7 @@ gis_account_page_local_constructed (GObj
   gtk_editable_set_text (GTK_EDITABLE (page->fullname_entry), "");
   gtk_list_store_clear (GTK_LIST_STORE (gtk_combo_box_get_model (GTK_COMBO_BOX (page->username_combo))));
   page->has_custom_username = FALSE;
+  page->has_custom_hostname = FALSE;
 
   gtk_menu_button_set_popover (GTK_MENU_BUTTON (page->avatar_button),
                                GTK_WIDGET (page->photo_dialog));
@@ -547,6 +638,8 @@ gis_account_page_local_class_init (GisAc
   gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAccountPageLocal, fullname_entry);
   gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAccountPageLocal, username_combo);
   gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAccountPageLocal, username_explanation);
+  gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAccountPageLocal, hostname_entry);
+  gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAccountPageLocal, hostname_explanation);
   gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAccountPageLocal, enable_parental_controls_box);
   gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAccountPageLocal, enable_parental_controls_check_button);
   gtk_widget_class_bind_template_callback (GTK_WIDGET_CLASS (klass), on_remove_avatar_button_clicked);
@@ -582,7 +675,7 @@ gis_account_page_local_init (GisAccountP
 gboolean
 gis_account_page_local_validate (GisAccountPageLocal *page)
 {
-  return page->valid_name && page->valid_username;
+  return page->valid_name && page->valid_username && page->valid_hostname;
 }
 
 gboolean
@@ -597,7 +690,9 @@ gboolean
 gis_account_page_local_apply (GisAccountPageLocal *local, GisPage *page)
 {
   GisDriver *driver = GIS_PAGE (page)->driver;
-  const gchar *username, *full_name;
+  const gchar *username, *full_name, *hostname;
+  GDBusConnection *connection;
+  GError *error = NULL;
   gboolean parental_controls_enabled;
   GdkTexture *texture = NULL;
 
@@ -624,6 +719,28 @@ gis_account_page_local_apply (GisAccount
       g_object_unref (texture);
     }
 
+  hostname = gtk_editable_get_text (GTK_EDITABLE (local->hostname_entry));
+  connection = g_bus_get_sync (G_BUS_TYPE_SYSTEM, NULL, &error);
+  if (error != NULL) {
+    g_warning ("Could not get DBus connection: %s", error->message);
+    g_error_free (error);
+    return TRUE;
+  }
+  g_dbus_connection_call_sync (connection, "org.freedesktop.hostname1",
+                               "/org/freedesktop/hostname1", "org.freedesktop.hostname1",
+                               "SetStaticHostname",
+                               g_variant_new ("(sb)", hostname, TRUE),
+                               G_VARIANT_TYPE ("()"),
+                               G_DBUS_CALL_FLAGS_NONE,
+                               -1,  /* default timeout */
+                               NULL,  /* cancellable */
+                               &error);
+  if (error != NULL) {
+    g_warning ("Could not change hostname: %s", error->message);
+    g_error_free (error);
+    return TRUE;
+  }
+
 #ifdef HAVE_PARENTAL_CONTROLS
   parental_controls_enabled = gtk_check_button_get_active (GTK_CHECK_BUTTON (local->enable_parental_controls_check_button));
 #else
Index: gnome-initial-setup/gnome-initial-setup/pages/account/gis-account-page-local.ui
===================================================================
--- gnome-initial-setup.orig/gnome-initial-setup/pages/account/gis-account-page-local.ui
+++ gnome-initial-setup/gnome-initial-setup/pages/account/gis-account-page-local.ui
@@ -141,11 +141,56 @@
               </object>
             </child>
             <child>
+              <object class="GtkLabel" id="hostname_label">
+                <property name="halign">end</property>
+                <property name="xalign">1</property>
+                <property name="label" translatable="yes">_Computer</property>
+                <property name="use_underline">True</property>
+                <property name="mnemonic_widget">hostname_entry</property>
+                <property name="margin_top">6</property>
+                <layout>
+                  <property name="column">0</property>
+                  <property name="row">6</property>
+                </layout>
+              </object>
+            </child>
+            <child>
+              <object class="GtkEntry" id="hostname_entry">
+                <property name="max_length">255</property>
+                <property name="width-chars">25</property>
+                <layout>
+                  <property name="column">1</property>
+                  <property name="row">6</property>
+                </layout>
+              </object>
+            </child>
+            <child>
+              <object class="GtkLabel" id="hostname_explanation">
+                <property name="yalign">0</property>
+                <property name="xalign">0</property>
+                <property name="width-chars">35</property>
+                <property name="max-width-chars">35</property>
+                <property name="height-request">50</property>
+                <property name="wrap">True</property>
+                <property name="wrap_mode">word-char</property>
+                <layout>
+                  <property name="column">1</property>
+                  <property name="row">7</property>
+                </layout>
+                <style>
+                  <class name="dim-label"/>
+                </style>
+                <attributes>
+                  <attribute name="scale" value="0.8"/>
+                </attributes>
+              </object>
+            </child>
+            <child>
               <object class="GtkBox" id="enable_parental_controls_box">
                 <property name="orientation">vertical</property>
                 <layout>
                   <property name="column">1</property>
-                  <property name="row">6</property>
+                  <property name="row">8</property>
                 </layout>
                 <child>
                   <object class="GtkCheckButton" id="enable_parental_controls_check_button">
