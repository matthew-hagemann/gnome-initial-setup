From: Robert Ancell <robert.ancell@canonical.com>
Date: Wed, 18 Apr 2018 12:38:11 +1200
Subject: [PATCH 4/6] Make summary page explicitly request navigation buttons
 to be hidden

---
 gnome-initial-setup/gis-assistant.c                | 16 +++++++++++--
 gnome-initial-setup/gis-assistant.ui               |  9 +++++++
 gnome-initial-setup/gis-page.c                     | 28 +++++++++++++++++++++-
 gnome-initial-setup/gis-page.h                     |  2 ++
 .../pages/summary/gis-summary-page.c               |  2 ++
 5 files changed, 54 insertions(+), 3 deletions(-)

Index: gnome-initial-setup/gnome-initial-setup/gis-assistant.c
===================================================================
--- gnome-initial-setup.orig/gnome-initial-setup/gis-assistant.c
+++ gnome-initial-setup/gnome-initial-setup/gis-assistant.c
@@ -47,6 +47,7 @@ struct _GisAssistant
   GtkBox     parent_instance;
 
   GtkWidget *forward;
+  GtkWidget *done;
   GtkWidget *accept;
   GtkWidget *skip;
   GtkWidget *back;
@@ -121,7 +122,11 @@ find_next_page (GisAssistant *self,
 static void
 switch_to_next_page (GisAssistant *assistant)
 {
-  switch_to (assistant, find_next_page (assistant, assistant->current_page));
+  GisPage *page;
+
+  page = find_next_page (assistant, assistant->current_page);
+  if (page)
+    switch_to (assistant, page);
 }
 
 static void
@@ -185,6 +190,7 @@ set_navigation_button (GisAssistant *ass
                        GtkWidget    *widget)
 {
   gtk_widget_set_visible (assistant->forward, (widget == assistant->forward));
+  gtk_widget_set_visible (assistant->done, (widget == assistant->done));
   gtk_widget_set_visible (assistant->accept, (widget == assistant->accept));
   gtk_widget_set_visible (assistant->skip, (widget == assistant->skip));
 }
@@ -203,7 +209,7 @@ update_navigation_buttons (GisAssistant
 
   is_last_page = (l->next == NULL);
 
-  if (is_last_page)
+  if (gis_page_get_hide_navigation (page))
     {
       gtk_widget_hide (assistant->back);
       gtk_widget_hide (assistant->forward);
@@ -223,6 +229,8 @@ update_navigation_buttons (GisAssistant
 
       if (gis_page_get_needs_accept (page))
         next_widget = assistant->accept;
+      else if (is_last_page)
+        next_widget = assistant->done;
       else
         next_widget = assistant->forward;
 
@@ -254,6 +262,7 @@ update_applying_state (GisAssistant *ass
       is_first_page = assistant->pages->data == assistant->current_page;
     }
   gtk_widget_set_sensitive (assistant->forward, !applying);
+  gtk_widget_set_sensitive (assistant->done, !applying);
   gtk_widget_set_visible (assistant->back, !applying && !is_first_page);
   gtk_widget_set_visible (assistant->cancel, applying);
   gtk_widget_set_visible (assistant->spinner, applying);
@@ -405,6 +414,7 @@ gis_assistant_locale_changed (GisAssista
   GList *l;
 
   gtk_button_set_label (GTK_BUTTON (assistant->forward), _("_Next"));
+  gtk_button_set_label (GTK_BUTTON (assistant->done), _("_Done"));
   gtk_button_set_label (GTK_BUTTON (assistant->accept), _("_Accept"));
   gtk_button_set_label (GTK_BUTTON (assistant->skip), _("_Skip"));
   gtk_button_set_label (GTK_BUTTON (assistant->back), _("_Previous"));
@@ -440,6 +450,7 @@ gis_assistant_init (GisAssistant *assist
                     G_CALLBACK (current_page_changed), assistant);
 
   g_signal_connect (assistant->forward, "clicked", G_CALLBACK (go_forward), assistant);
+  g_signal_connect (assistant->done, "clicked", G_CALLBACK (go_forward), assistant);
   g_signal_connect (assistant->accept, "clicked", G_CALLBACK (go_forward), assistant);
   g_signal_connect (assistant->skip, "clicked", G_CALLBACK (go_forward), assistant);
 
@@ -478,6 +489,7 @@ gis_assistant_class_init (GisAssistantCl
   gtk_widget_class_set_template_from_resource (GTK_WIDGET_CLASS (klass), "/org/gnome/initial-setup/gis-assistant.ui");
 
   gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAssistant, forward);
+  gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAssistant, done);
   gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAssistant, accept);
   gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAssistant, skip);
   gtk_widget_class_bind_template_child (GTK_WIDGET_CLASS (klass), GisAssistant, back);
Index: gnome-initial-setup/gnome-initial-setup/gis-assistant.ui
===================================================================
--- gnome-initial-setup.orig/gnome-initial-setup/gis-assistant.ui
+++ gnome-initial-setup/gnome-initial-setup/gis-assistant.ui
@@ -68,6 +68,15 @@
         <property name="pack-type">end</property>
       </packing>
     </child>
+    <child>
+      <object class="GtkButton" id="done">
+        <property name="use-underline">True</property>
+        <property name="can-default">True</property>
+      </object>
+      <packing>
+        <property name="pack-type">end</property>
+      </packing>
+    </child>
   </object>
 
   <object class="GtkSizeGroup" id="headerheight">
Index: gnome-initial-setup/gnome-initial-setup/gis-page.c
===================================================================
--- gnome-initial-setup.orig/gnome-initial-setup/gis-page.c
+++ gnome-initial-setup/gnome-initial-setup/gis-page.c
@@ -38,7 +38,8 @@ struct _GisPagePrivate
   guint skippable : 1;
   guint needs_accept : 1;
   guint has_forward : 1;
-  guint padding : 5;
+  guint hide_navigation : 1;
+  guint padding : 4;
 };
 typedef struct _GisPagePrivate GisPagePrivate;
 
@@ -51,6 +52,7 @@ enum
   PROP_TITLE,
   PROP_COMPLETE,
   PROP_SKIPPABLE,
+  PROP_HIDE_NAVIGATION,
   PROP_NEEDS_ACCEPT,
   PROP_APPLYING,
   PROP_SMALL_SCREEN,
@@ -82,6 +84,9 @@ gis_page_get_property (GObject    *objec
     case PROP_SKIPPABLE:
       g_value_set_boolean (value, priv->skippable);
       break;
+    case PROP_HIDE_NAVIGATION:
+      g_value_set_boolean (value, priv->hide_navigation);
+      break;
     case PROP_NEEDS_ACCEPT:
       g_value_set_boolean (value, priv->needs_accept);
       break;
@@ -131,6 +136,9 @@ gis_page_set_property (GObject      *obj
     case PROP_SKIPPABLE:
       priv->skippable = g_value_get_boolean (value);
       break;
+    case PROP_HIDE_NAVIGATION:
+      priv->hide_navigation = g_value_get_boolean (value);
+      break;
     case PROP_NEEDS_ACCEPT:
       priv->needs_accept = g_value_get_boolean (value);
       break;
@@ -219,6 +227,9 @@ gis_page_class_init (GisPageClass *klass
   obj_props[PROP_SKIPPABLE] =
     g_param_spec_boolean ("skippable", "", "", FALSE,
                           G_PARAM_STATIC_STRINGS | G_PARAM_READWRITE);
+  obj_props[PROP_HIDE_NAVIGATION] =
+    g_param_spec_boolean ("hide-navigation", "", "", FALSE,
+                          G_PARAM_STATIC_STRINGS | G_PARAM_READWRITE);
   obj_props[PROP_NEEDS_ACCEPT] =
     g_param_spec_boolean ("needs-accept", "", "", FALSE,
                           G_PARAM_STATIC_STRINGS | G_PARAM_READWRITE);
@@ -294,6 +305,21 @@ gis_page_set_skippable (GisPage *page, g
 }
 
 gboolean
+gis_page_get_hide_navigation (GisPage *page)
+{
+  GisPagePrivate *priv = gis_page_get_instance_private (page);
+  return priv->hide_navigation;
+}
+
+void
+gis_page_set_hide_navigation (GisPage *page, gboolean hide_navigation)
+{
+  GisPagePrivate *priv = gis_page_get_instance_private (page);
+  priv->hide_navigation = hide_navigation;
+  g_object_notify_by_pspec (G_OBJECT (page), obj_props[PROP_HIDE_NAVIGATION]);
+}
+
+gboolean
 gis_page_get_needs_accept (GisPage *page)
 {
   GisPagePrivate *priv = gis_page_get_instance_private (page);
Index: gnome-initial-setup/gnome-initial-setup/gis-page.h
===================================================================
--- gnome-initial-setup.orig/gnome-initial-setup/gis-page.h
+++ gnome-initial-setup/gnome-initial-setup/gis-page.h
@@ -71,6 +71,8 @@ gboolean     gis_page_get_complete (GisP
 void         gis_page_set_complete (GisPage *page, gboolean complete);
 gboolean     gis_page_get_skippable (GisPage *page);
 void         gis_page_set_skippable (GisPage *page, gboolean skippable);
+gboolean     gis_page_get_hide_navigation (GisPage *page);
+void         gis_page_set_hide_navigation (GisPage *page, gboolean hide_navigation);
 gboolean     gis_page_get_needs_accept (GisPage *page);
 void         gis_page_set_needs_accept (GisPage *page, gboolean needs_accept);
 gboolean     gis_page_get_has_forward (GisPage *page);
Index: gnome-initial-setup/gnome-initial-setup/pages/summary/gis-summary-page.c
===================================================================
--- gnome-initial-setup.orig/gnome-initial-setup/pages/summary/gis-summary-page.c
+++ gnome-initial-setup/gnome-initial-setup/pages/summary/gis-summary-page.c
@@ -250,6 +250,8 @@ gis_summary_page_constructed (GObject *o
 
   G_OBJECT_CLASS (gis_summary_page_parent_class)->constructed (object);
 
+  gis_page_set_hide_navigation (GIS_PAGE (page), TRUE);
+
   update_distro_name (page);
   g_signal_connect (priv->start_button, "clicked", G_CALLBACK (done_cb), page);
 
